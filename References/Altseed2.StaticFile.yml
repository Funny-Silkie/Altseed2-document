### YamlMime:ManagedReference
items:
- uid: Altseed2.StaticFile
  commentId: T:Altseed2.StaticFile
  id: StaticFile
  parent: Altseed2
  children:
  - Altseed2.StaticFile.Buffer
  - Altseed2.StaticFile.Create(System.String)
  - Altseed2.StaticFile.CreateAsync(System.String)
  - Altseed2.StaticFile.CreateStrict(System.String)
  - Altseed2.StaticFile.IsInPackage
  - Altseed2.StaticFile.Path
  - Altseed2.StaticFile.Reload
  - Altseed2.StaticFile.Size
  langs:
  - csharp
  - vb
  name: StaticFile
  nameWithType: StaticFile
  fullName: Altseed2.StaticFile
  type: Class
  source:
    remote:
      path: Engine/CorePartial/IO.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: StaticFile
    path: Src/Engine/CorePartial/IO.cs
    startLine: 7
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n一度でファイルを読み取るクラス\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class StaticFile : ISerializable, ICacheKeeper<StaticFile>
    content.vb: >-
      <Serializable>

      Public NotInheritable Class StaticFile
          Implements ISerializable, ICacheKeeper(Of StaticFile)
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Altseed2.StaticFile.Path
  commentId: P:Altseed2.StaticFile.Path
  id: Path
  parent: Altseed2.StaticFile
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: StaticFile.Path
  fullName: Altseed2.StaticFile.Path
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Path
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 12461
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n読み込んだファイルのパスを取得します。\n"
  example: []
  syntax:
    content: public string Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Path As String
  overload: Altseed2.StaticFile.Path*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.StaticFile.Size
  commentId: P:Altseed2.StaticFile.Size
  id: Size
  parent: Altseed2.StaticFile
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: StaticFile.Size
  fullName: Altseed2.StaticFile.Size
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Size
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 12473
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n読み込んだファイルのデータサイズを取得します。\n"
  example: []
  syntax:
    content: public int Size { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Size As Integer
  overload: Altseed2.StaticFile.Size*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.StaticFile.IsInPackage
  commentId: P:Altseed2.StaticFile.IsInPackage
  id: IsInPackage
  parent: Altseed2.StaticFile
  langs:
  - csharp
  - vb
  name: IsInPackage
  nameWithType: StaticFile.IsInPackage
  fullName: Altseed2.StaticFile.IsInPackage
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: IsInPackage
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 12485
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n読み込んだファイルがファイルパッケージ内に格納されているかどうかを取得します。\n"
  example: []
  syntax:
    content: public bool IsInPackage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInPackage As Boolean
  overload: Altseed2.StaticFile.IsInPackage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.StaticFile.Create(System.String)
  commentId: M:Altseed2.StaticFile.Create(System.String)
  id: Create(System.String)
  parent: Altseed2.StaticFile
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: StaticFile.Create(String)
  fullName: Altseed2.StaticFile.Create(System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Create
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 12500
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n指定ファイルを読み込んだ<xref href=\"Altseed2.StaticFile\" data-throw-if-not-resolved=\"false\"></xref>の新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public static StaticFile Create(string path)
    parameters:
    - id: path
      type: System.String
      description: 読み込むファイルのパス
    return:
      type: Altseed2.StaticFile
      description: pathで読み込んだファイルを格納する<xref href="Altseed2.StaticFile" data-throw-if-not-resolved="false"></xref>の新しいインスタンスを生成します。
    content.vb: Public Shared Function Create(path As String) As StaticFile
  overload: Altseed2.StaticFile.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>がnull
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.StaticFile.Reload
  commentId: M:Altseed2.StaticFile.Reload
  id: Reload
  parent: Altseed2.StaticFile
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: StaticFile.Reload()
  fullName: Altseed2.StaticFile.Reload()
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Reload
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 12521
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n再読み込みを行います。\n"
  example: []
  syntax:
    content: public bool Reload()
    return:
      type: System.Boolean
      description: 再読み込み処理がうまくいったらtrue，それ以外でfalse
    content.vb: Public Function Reload As Boolean
  overload: Altseed2.StaticFile.Reload*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.StaticFile.Buffer
  commentId: P:Altseed2.StaticFile.Buffer
  id: Buffer
  parent: Altseed2.StaticFile
  langs:
  - csharp
  - vb
  name: Buffer
  nameWithType: StaticFile.Buffer
  fullName: Altseed2.StaticFile.Buffer
  type: Property
  source:
    remote:
      path: Engine/CorePartial/IO.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Buffer
    path: Src/Engine/CorePartial/IO.cs
    startLine: 12
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n読み込まれたデータを取得します。\n"
  example: []
  syntax:
    content: public byte[] Buffer { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property Buffer As Byte()
  overload: Altseed2.StaticFile.Buffer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.StaticFile.CreateStrict(System.String)
  commentId: M:Altseed2.StaticFile.CreateStrict(System.String)
  id: CreateStrict(System.String)
  parent: Altseed2.StaticFile
  langs:
  - csharp
  - vb
  name: CreateStrict(String)
  nameWithType: StaticFile.CreateStrict(String)
  fullName: Altseed2.StaticFile.CreateStrict(System.String)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/IO.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: CreateStrict
    path: Src/Engine/CorePartial/IO.cs
    startLine: 33
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n指定パスからファイルを読み込みます。失敗した場合、例外が発生します。\n"
  example: []
  syntax:
    content: public static StaticFile CreateStrict(string path)
    parameters:
    - id: path
      type: System.String
      description: 読み込むファイルのパス
    return:
      type: Altseed2.StaticFile
      description: <code data-dev-comment-type="paramref" class="paramref">path</code>をパスに持つファイルのデータを格納した<xref href="Altseed2.StaticFile" data-throw-if-not-resolved="false"></xref>の新しいインスタンス
    content.vb: Public Shared Function CreateStrict(path As String) As StaticFile
  overload: Altseed2.StaticFile.CreateStrict*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>が空白文字のみからなる、または使用出来ない文字を含んでいる
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>がnull
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>で指定されたファイルが見つからない
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>が指定するパスが見つからない
  - type: System.SystemException
    commentId: T:System.SystemException
    description: ファイルが破損または読み込みに失敗
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.StaticFile.CreateAsync(System.String)
  commentId: M:Altseed2.StaticFile.CreateAsync(System.String)
  id: CreateAsync(System.String)
  parent: Altseed2.StaticFile
  langs:
  - csharp
  - vb
  name: CreateAsync(String)
  nameWithType: StaticFile.CreateAsync(String)
  fullName: Altseed2.StaticFile.CreateAsync(System.String)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/IO.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: CreateAsync
    path: Src/Engine/CorePartial/IO.cs
    startLine: 46
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n非同期読み込みを行います。\n"
  example: []
  syntax:
    content: public static Task<StaticFile> CreateAsync(string path)
    parameters:
    - id: path
      type: System.String
      description: 読み込むパス
    return:
      type: System.Threading.Tasks.Task{Altseed2.StaticFile}
      description: ''
    content.vb: Public Shared Function CreateAsync(path As String) As Task(Of StaticFile)
  overload: Altseed2.StaticFile.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Altseed2.StaticFile.Path*
  commentId: Overload:Altseed2.StaticFile.Path
  name: Path
  nameWithType: StaticFile.Path
  fullName: Altseed2.StaticFile.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Altseed2.StaticFile.Size*
  commentId: Overload:Altseed2.StaticFile.Size
  name: Size
  nameWithType: StaticFile.Size
  fullName: Altseed2.StaticFile.Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Altseed2.StaticFile.IsInPackage*
  commentId: Overload:Altseed2.StaticFile.IsInPackage
  name: IsInPackage
  nameWithType: StaticFile.IsInPackage
  fullName: Altseed2.StaticFile.IsInPackage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Altseed2.StaticFile
  commentId: T:Altseed2.StaticFile
  parent: Altseed2
  name: StaticFile
  nameWithType: StaticFile
  fullName: Altseed2.StaticFile
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Altseed2.StaticFile.Create*
  commentId: Overload:Altseed2.StaticFile.Create
  name: Create
  nameWithType: StaticFile.Create
  fullName: Altseed2.StaticFile.Create
- uid: Altseed2.StaticFile.Reload*
  commentId: Overload:Altseed2.StaticFile.Reload
  name: Reload
  nameWithType: StaticFile.Reload
  fullName: Altseed2.StaticFile.Reload
- uid: Altseed2.StaticFile.Buffer*
  commentId: Overload:Altseed2.StaticFile.Buffer
  name: Buffer
  nameWithType: StaticFile.Buffer
  fullName: Altseed2.StaticFile.Buffer
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
- uid: System.IO.PathTooLongException
  commentId: T:System.IO.PathTooLongException
  isExternal: true
- uid: System.SystemException
  commentId: T:System.SystemException
  isExternal: true
- uid: Altseed2.StaticFile.CreateStrict*
  commentId: Overload:Altseed2.StaticFile.CreateStrict
  name: CreateStrict
  nameWithType: StaticFile.CreateStrict
  fullName: Altseed2.StaticFile.CreateStrict
- uid: Altseed2.StaticFile.CreateAsync*
  commentId: Overload:Altseed2.StaticFile.CreateAsync
  name: CreateAsync
  nameWithType: StaticFile.CreateAsync
  fullName: Altseed2.StaticFile.CreateAsync
- uid: System.Threading.Tasks.Task{Altseed2.StaticFile}
  commentId: T:System.Threading.Tasks.Task{Altseed2.StaticFile}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<StaticFile>
  nameWithType: Task<StaticFile>
  fullName: System.Threading.Tasks.Task<Altseed2.StaticFile>
  nameWithType.vb: Task(Of StaticFile)
  fullName.vb: System.Threading.Tasks.Task(Of Altseed2.StaticFile)
  name.vb: Task(Of StaticFile)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altseed2.StaticFile
    name: StaticFile
    nameWithType: StaticFile
    fullName: Altseed2.StaticFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altseed2.StaticFile
    name: StaticFile
    nameWithType: StaticFile
    fullName: Altseed2.StaticFile
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
