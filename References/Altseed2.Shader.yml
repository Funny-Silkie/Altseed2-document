### YamlMime:ManagedReference
items:
- uid: Altseed2.Shader
  commentId: T:Altseed2.Shader
  id: Shader
  parent: Altseed2
  children:
  - Altseed2.Shader.Code
  - Altseed2.Shader.Create(System.String,System.String,Altseed2.ShaderStage)
  - Altseed2.Shader.CreateFromFile(System.String,System.String,Altseed2.ShaderStage)
  - Altseed2.Shader.Name
  - Altseed2.Shader.StageType
  - Altseed2.Shader.TryCreate(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)
  - Altseed2.Shader.TryCreateFromFile(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)
  langs:
  - csharp
  - vb
  name: Shader
  nameWithType: Shader
  fullName: Altseed2.Shader
  type: Class
  source:
    remote:
      path: Engine/CorePartial/Shader.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Shader
    path: Src/Engine/CorePartial/Shader.cs
    startLine: 5
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nシェーダ\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class Shader : ISerializable, ICacheKeeper<Shader>
    content.vb: >-
      <Serializable>

      Public NotInheritable Class Shader
          Implements ISerializable, ICacheKeeper(Of Shader)
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Altseed2.Shader.StageType
  commentId: P:Altseed2.Shader.StageType
  id: StageType
  parent: Altseed2.Shader
  langs:
  - csharp
  - vb
  name: StageType
  nameWithType: Shader.StageType
  fullName: Altseed2.Shader.StageType
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: StageType
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8128
  assemblies:
  - Altseed2
  namespace: Altseed2
  syntax:
    content: public ShaderStage StageType { get; }
    parameters: []
    return:
      type: Altseed2.ShaderStage
    content.vb: Public ReadOnly Property StageType As ShaderStage
  overload: Altseed2.Shader.StageType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Shader.Code
  commentId: P:Altseed2.Shader.Code
  id: Code
  parent: Altseed2.Shader
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: Shader.Code
  fullName: Altseed2.Shader.Code
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Code
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8140
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nインスタンス生成に使用したコードを取得します\n"
  example: []
  syntax:
    content: public string Code { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Code As String
  overload: Altseed2.Shader.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Shader.Name
  commentId: P:Altseed2.Shader.Name
  id: Name
  parent: Altseed2.Shader
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Shader.Name
  fullName: Altseed2.Shader.Name
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Name
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8152
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n名前を取得します\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Altseed2.Shader.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Shader.Create(System.String,System.String,Altseed2.ShaderStage)
  commentId: M:Altseed2.Shader.Create(System.String,System.String,Altseed2.ShaderStage)
  id: Create(System.String,System.String,Altseed2.ShaderStage)
  parent: Altseed2.Shader
  langs:
  - csharp
  - vb
  name: Create(String, String, ShaderStage)
  nameWithType: Shader.Create(String, String, ShaderStage)
  fullName: Altseed2.Shader.Create(System.String, System.String, Altseed2.ShaderStage)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/Shader.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Create
    path: Src/Engine/CorePartial/Shader.cs
    startLine: 15
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nコードをコンパイルして<xref href=\"Altseed2.Shader\" data-throw-if-not-resolved=\"false\"></xref>の新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public static Shader Create(string name, string code, ShaderStage shaderStage)
    parameters:
    - id: name
      type: System.String
      description: シェーダにつける名前
    - id: code
      type: System.String
      description: シェーダのコード
    - id: shaderStage
      type: Altseed2.ShaderStage
      description: シェーダの種類
    return:
      type: Altseed2.Shader
      description: <code data-dev-comment-type="paramref" class="paramref">code</code>をコンパイルしてできる<xref href="Altseed2.Shader" data-throw-if-not-resolved="false"></xref>の新しいインスタンス コンパイルに失敗した場合はnull
    content.vb: Public Shared Function Create(name As String, code As String, shaderStage As ShaderStage) As Shader
  overload: Altseed2.Shader.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">name</code>または<code data-dev-comment-type="paramref" class="paramref">code</code>がnull
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Shader.CreateFromFile(System.String,System.String,Altseed2.ShaderStage)
  commentId: M:Altseed2.Shader.CreateFromFile(System.String,System.String,Altseed2.ShaderStage)
  id: CreateFromFile(System.String,System.String,Altseed2.ShaderStage)
  parent: Altseed2.Shader
  langs:
  - csharp
  - vb
  name: CreateFromFile(String, String, ShaderStage)
  nameWithType: Shader.CreateFromFile(String, String, ShaderStage)
  fullName: Altseed2.Shader.CreateFromFile(System.String, System.String, Altseed2.ShaderStage)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/Shader.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: CreateFromFile
    path: Src/Engine/CorePartial/Shader.cs
    startLine: 26
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nファイルに書かれたコードをコンパイルして<xref href=\"Altseed2.Shader\" data-throw-if-not-resolved=\"false\"></xref>の新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public static Shader CreateFromFile(string name, string path, ShaderStage shaderStage)
    parameters:
    - id: name
      type: System.String
      description: シェーダにつける名前
    - id: path
      type: System.String
      description: シェーダのコードが書かれたファイルのパス
    - id: shaderStage
      type: Altseed2.ShaderStage
      description: シェーダの種類
    return:
      type: Altseed2.Shader
      description: <code data-dev-comment-type="paramref" class="paramref">path</code>に書かれたコードをコンパイルしてできる<xref href="Altseed2.Shader" data-throw-if-not-resolved="false"></xref>の新しいインスタンス コンパイルに失敗した場合はnull
    content.vb: Public Shared Function CreateFromFile(name As String, path As String, shaderStage As ShaderStage) As Shader
  overload: Altseed2.Shader.CreateFromFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">name</code>または<code data-dev-comment-type="paramref" class="paramref">path</code>がnull
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Shader.TryCreate(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)
  commentId: M:Altseed2.Shader.TryCreate(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)
  id: TryCreate(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)
  parent: Altseed2.Shader
  langs:
  - csharp
  - vb
  name: TryCreate(String, String, ShaderStage, out Shader)
  nameWithType: Shader.TryCreate(String, String, ShaderStage, out Shader)
  fullName: Altseed2.Shader.TryCreate(System.String, System.String, Altseed2.ShaderStage, out Altseed2.Shader)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/Shader.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: TryCreate
    path: Src/Engine/CorePartial/Shader.cs
    startLine: 38
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nコードをコンパイルして<xref href=\"Altseed2.Shader\" data-throw-if-not-resolved=\"false\"></xref>の新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public static string TryCreate(string name, string code, ShaderStage shaderStage, out Shader shader)
    parameters:
    - id: name
      type: System.String
      description: シェーダにつける名前
    - id: code
      type: System.String
      description: シェーダのコード
    - id: shaderStage
      type: Altseed2.ShaderStage
      description: シェーダの種類
    - id: shader
      type: Altseed2.Shader
      description: <code data-dev-comment-type="paramref" class="paramref">code</code>をコンパイルしてできる<xref href="Altseed2.Shader" data-throw-if-not-resolved="false"></xref>の新しいインスタンス コンパイルに失敗した場合はnull
    return:
      type: System.String
      description: <code data-dev-comment-type="paramref" class="paramref">code</code>をコンパイルした際のメッセージ
    content.vb: Public Shared Function TryCreate(name As String, code As String, shaderStage As ShaderStage, ByRef shader As Shader) As String
  overload: Altseed2.Shader.TryCreate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">name</code>または<code data-dev-comment-type="paramref" class="paramref">code</code>がnull
  nameWithType.vb: Shader.TryCreate(String, String, ShaderStage, ByRef Shader)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Altseed2.Shader.TryCreate(System.String, System.String, Altseed2.ShaderStage, ByRef Altseed2.Shader)
  name.vb: TryCreate(String, String, ShaderStage, ByRef Shader)
- uid: Altseed2.Shader.TryCreateFromFile(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)
  commentId: M:Altseed2.Shader.TryCreateFromFile(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)
  id: TryCreateFromFile(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)
  parent: Altseed2.Shader
  langs:
  - csharp
  - vb
  name: TryCreateFromFile(String, String, ShaderStage, out Shader)
  nameWithType: Shader.TryCreateFromFile(String, String, ShaderStage, out Shader)
  fullName: Altseed2.Shader.TryCreateFromFile(System.String, System.String, Altseed2.ShaderStage, out Altseed2.Shader)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/Shader.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: TryCreateFromFile
    path: Src/Engine/CorePartial/Shader.cs
    startLine: 54
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nファイルに書かれたコードをコンパイルして<xref href=\"Altseed2.Shader\" data-throw-if-not-resolved=\"false\"></xref>の新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public static string TryCreateFromFile(string name, string path, ShaderStage shaderStage, out Shader shader)
    parameters:
    - id: name
      type: System.String
      description: シェーダにつける名前
    - id: path
      type: System.String
      description: シェーダのコードが書かれたファイルのパス
    - id: shaderStage
      type: Altseed2.ShaderStage
      description: シェーダの種類
    - id: shader
      type: Altseed2.Shader
      description: ''
    return:
      type: System.String
      description: <code data-dev-comment-type="paramref" class="paramref">path</code>に書かれたコードをコンパイルした際のメッセージ
    content.vb: Public Shared Function TryCreateFromFile(name As String, path As String, shaderStage As ShaderStage, ByRef shader As Shader) As String
  overload: Altseed2.Shader.TryCreateFromFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>に書かれたコードをコンパイルしてできる<xref href="Altseed2.Shader" data-throw-if-not-resolved="false"></xref>の新しいインスタンス コンパイルに失敗した場合はnull<code data-dev-comment-type="paramref" class="paramref">name</code>または<code data-dev-comment-type="paramref" class="paramref">path</code>がnull
  nameWithType.vb: Shader.TryCreateFromFile(String, String, ShaderStage, ByRef Shader)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Altseed2.Shader.TryCreateFromFile(System.String, System.String, Altseed2.ShaderStage, ByRef Altseed2.Shader)
  name.vb: TryCreateFromFile(String, String, ShaderStage, ByRef Shader)
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Altseed2.Shader.StageType*
  commentId: Overload:Altseed2.Shader.StageType
  name: StageType
  nameWithType: Shader.StageType
  fullName: Altseed2.Shader.StageType
- uid: Altseed2.ShaderStage
  commentId: T:Altseed2.ShaderStage
  parent: Altseed2
  name: ShaderStage
  nameWithType: ShaderStage
  fullName: Altseed2.ShaderStage
- uid: Altseed2.Shader.Code*
  commentId: Overload:Altseed2.Shader.Code
  name: Code
  nameWithType: Shader.Code
  fullName: Altseed2.Shader.Code
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Altseed2.Shader.Name*
  commentId: Overload:Altseed2.Shader.Name
  name: Name
  nameWithType: Shader.Name
  fullName: Altseed2.Shader.Name
- uid: Altseed2.Shader
  commentId: T:Altseed2.Shader
  parent: Altseed2
  name: Shader
  nameWithType: Shader
  fullName: Altseed2.Shader
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Altseed2.Shader.Create*
  commentId: Overload:Altseed2.Shader.Create
  name: Create
  nameWithType: Shader.Create
  fullName: Altseed2.Shader.Create
- uid: Altseed2.Shader.CreateFromFile*
  commentId: Overload:Altseed2.Shader.CreateFromFile
  name: CreateFromFile
  nameWithType: Shader.CreateFromFile
  fullName: Altseed2.Shader.CreateFromFile
- uid: Altseed2.Shader.TryCreate*
  commentId: Overload:Altseed2.Shader.TryCreate
  name: TryCreate
  nameWithType: Shader.TryCreate
  fullName: Altseed2.Shader.TryCreate
- uid: Altseed2.Shader.TryCreateFromFile*
  commentId: Overload:Altseed2.Shader.TryCreateFromFile
  name: TryCreateFromFile
  nameWithType: Shader.TryCreateFromFile
  fullName: Altseed2.Shader.TryCreateFromFile
