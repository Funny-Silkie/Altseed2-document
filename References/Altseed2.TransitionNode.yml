### YamlMime:ManagedReference
items:
- uid: Altseed2.TransitionNode
  commentId: T:Altseed2.TransitionNode
  id: TransitionNode
  parent: Altseed2
  children:
  - Altseed2.TransitionNode.#ctor(Altseed2.Node,Altseed2.Node,System.Single,System.Single)
  - Altseed2.TransitionNode.GetCoroutine(System.Single,System.Single)
  - Altseed2.TransitionNode.OnClosing(System.Single)
  - Altseed2.TransitionNode.OnNodeSwapped
  - Altseed2.TransitionNode.OnNodeSwapping
  - Altseed2.TransitionNode.OnOpening(System.Single)
  - Altseed2.TransitionNode.OnTransitionBegin
  - Altseed2.TransitionNode.OnTransitionEnd
  langs:
  - csharp
  - vb
  name: TransitionNode
  nameWithType: TransitionNode
  fullName: Altseed2.TransitionNode
  type: Class
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: TransitionNode
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 8
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n画面遷移を行うノードのクラス\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class TransitionNode : Node
    content.vb: >-
      <Serializable>

      Public Class TransitionNode
          Inherits Node
  inheritance:
  - System.Object
  - Altseed2.Registerable{Altseed2.Node}
  - Altseed2.Node
  derivedClasses:
  - Altseed2.RuledTransitionNode
  inheritedMembers:
  - Altseed2.Node.Parent
  - Altseed2.Node.Status
  - Altseed2.Node.Children
  - Altseed2.Node.AddChildNode(Altseed2.Node)
  - Altseed2.Node.RemoveChildNode(Altseed2.Node)
  - Altseed2.Node.OnAdded
  - Altseed2.Node.OnRemoved
  - Altseed2.Node.OnUpdate
  - Altseed2.Node.EnumerateAncestors
  - Altseed2.Node.EnumerateDescendants
  - Altseed2.Node.EnumerateDescendants``1
  - Altseed2.Node.EnumerateDescendants``1(System.Func{{T},System.Boolean})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altseed2.TransitionNode.#ctor(Altseed2.Node,Altseed2.Node,System.Single,System.Single)
  commentId: M:Altseed2.TransitionNode.#ctor(Altseed2.Node,Altseed2.Node,System.Single,System.Single)
  id: '#ctor(Altseed2.Node,Altseed2.Node,System.Single,System.Single)'
  parent: Altseed2.TransitionNode
  langs:
  - csharp
  - vb
  name: TransitionNode(Node, Node, Single, Single)
  nameWithType: TransitionNode.TransitionNode(Node, Node, Single, Single)
  fullName: Altseed2.TransitionNode.TransitionNode(Altseed2.Node, Altseed2.Node, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: .ctor
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 33
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.TransitionNode\" data-throw-if-not-resolved=\"false\"></xref>の新しいインスタンスを作成します。\n"
  example: []
  syntax:
    content: public TransitionNode(Node oldNode, Node newNode, float closingDuration, float openingDuration)
    parameters:
    - id: oldNode
      type: Altseed2.Node
      description: トランジションによって取り除かれるノード
    - id: newNode
      type: Altseed2.Node
      description: トランジションによって追加されるノード
    - id: closingDuration
      type: System.Single
      description: トランジションが始まってからノードが入れ替わるまでの期間
    - id: openingDuration
      type: System.Single
      description: ノードが入れ替わってからトランジションが終わるまでの期間
    content.vb: Public Sub New(oldNode As Node, newNode As Node, closingDuration As Single, openingDuration As Single)
  overload: Altseed2.TransitionNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.TransitionNode.OnClosing(System.Single)
  commentId: M:Altseed2.TransitionNode.OnClosing(System.Single)
  id: OnClosing(System.Single)
  parent: Altseed2.TransitionNode
  langs:
  - csharp
  - vb
  name: OnClosing(Single)
  nameWithType: TransitionNode.OnClosing(Single)
  fullName: Altseed2.TransitionNode.OnClosing(System.Single)
  type: Method
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: OnClosing
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 51
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nノードが入れ替わる前の処理を記述します。\n"
  example: []
  syntax:
    content: protected virtual void OnClosing(float progress)
    parameters:
    - id: progress
      type: System.Single
      description: 0.0f ~ 1.0fの範囲で、ノードが入れ替わるまでの進行度を受け取ります。
    content.vb: Protected Overridable Sub OnClosing(progress As Single)
  overload: Altseed2.TransitionNode.OnClosing*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Altseed2.TransitionNode.OnOpening(System.Single)
  commentId: M:Altseed2.TransitionNode.OnOpening(System.Single)
  id: OnOpening(System.Single)
  parent: Altseed2.TransitionNode
  langs:
  - csharp
  - vb
  name: OnOpening(Single)
  nameWithType: TransitionNode.OnOpening(Single)
  fullName: Altseed2.TransitionNode.OnOpening(System.Single)
  type: Method
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: OnOpening
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 57
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nノードが入れ替わった後の処理を記述します。\n"
  example: []
  syntax:
    content: protected virtual void OnOpening(float progress)
    parameters:
    - id: progress
      type: System.Single
      description: 0.0f ~ 1.0fの範囲で、ノードが入れ替わった後の進行度を受け取ります。
    content.vb: Protected Overridable Sub OnOpening(progress As Single)
  overload: Altseed2.TransitionNode.OnOpening*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Altseed2.TransitionNode.OnNodeSwapping
  commentId: M:Altseed2.TransitionNode.OnNodeSwapping
  id: OnNodeSwapping
  parent: Altseed2.TransitionNode
  langs:
  - csharp
  - vb
  name: OnNodeSwapping()
  nameWithType: TransitionNode.OnNodeSwapping()
  fullName: Altseed2.TransitionNode.OnNodeSwapping()
  type: Method
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: OnNodeSwapping
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 62
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nノードが入れ替わる直前の処理を記述します。\n"
  example: []
  syntax:
    content: protected virtual void OnNodeSwapping()
    content.vb: Protected Overridable Sub OnNodeSwapping
  overload: Altseed2.TransitionNode.OnNodeSwapping*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Altseed2.TransitionNode.OnNodeSwapped
  commentId: M:Altseed2.TransitionNode.OnNodeSwapped
  id: OnNodeSwapped
  parent: Altseed2.TransitionNode
  langs:
  - csharp
  - vb
  name: OnNodeSwapped()
  nameWithType: TransitionNode.OnNodeSwapped()
  fullName: Altseed2.TransitionNode.OnNodeSwapped()
  type: Method
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: OnNodeSwapped
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 67
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nノードが入れ替わった直後の処理を記述します。\n"
  example: []
  syntax:
    content: protected virtual void OnNodeSwapped()
    content.vb: Protected Overridable Sub OnNodeSwapped
  overload: Altseed2.TransitionNode.OnNodeSwapped*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Altseed2.TransitionNode.OnTransitionBegin
  commentId: M:Altseed2.TransitionNode.OnTransitionBegin
  id: OnTransitionBegin
  parent: Altseed2.TransitionNode
  langs:
  - csharp
  - vb
  name: OnTransitionBegin()
  nameWithType: TransitionNode.OnTransitionBegin()
  fullName: Altseed2.TransitionNode.OnTransitionBegin()
  type: Method
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: OnTransitionBegin
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 72
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nトランジションが開始する瞬間の処理を記述します。\n"
  example: []
  syntax:
    content: protected virtual void OnTransitionBegin()
    content.vb: Protected Overridable Sub OnTransitionBegin
  overload: Altseed2.TransitionNode.OnTransitionBegin*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Altseed2.TransitionNode.OnTransitionEnd
  commentId: M:Altseed2.TransitionNode.OnTransitionEnd
  id: OnTransitionEnd
  parent: Altseed2.TransitionNode
  langs:
  - csharp
  - vb
  name: OnTransitionEnd()
  nameWithType: TransitionNode.OnTransitionEnd()
  fullName: Altseed2.TransitionNode.OnTransitionEnd()
  type: Method
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: OnTransitionEnd
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 77
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nトランジションが終了する直前の処理を記述します。\n"
  example: []
  syntax:
    content: protected virtual void OnTransitionEnd()
    content.vb: Protected Overridable Sub OnTransitionEnd
  overload: Altseed2.TransitionNode.OnTransitionEnd*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Altseed2.TransitionNode.GetCoroutine(System.Single,System.Single)
  commentId: M:Altseed2.TransitionNode.GetCoroutine(System.Single,System.Single)
  id: GetCoroutine(System.Single,System.Single)
  parent: Altseed2.TransitionNode
  langs:
  - csharp
  - vb
  name: GetCoroutine(Single, Single)
  nameWithType: TransitionNode.GetCoroutine(Single, Single)
  fullName: Altseed2.TransitionNode.GetCoroutine(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Engine/Node/Transition/TransitionNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: GetCoroutine
    path: Src/Engine/Node/Transition/TransitionNode.cs
    startLine: 82
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nトランジションを行うコルーチン\n"
  example: []
  syntax:
    content: IEnumerator<int> GetCoroutine(float closingDuration, float openingDuration)
    parameters:
    - id: closingDuration
      type: System.Single
    - id: openingDuration
      type: System.Single
    return:
      type: System.Collections.Generic.IEnumerator{System.Int32}
    content.vb: Function GetCoroutine(closingDuration As Single, openingDuration As Single) As IEnumerator(Of Integer)
  overload: Altseed2.TransitionNode.GetCoroutine*
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Altseed2.Registerable{Altseed2.Node}
  commentId: T:Altseed2.Registerable{Altseed2.Node}
  parent: Altseed2
  definition: Altseed2.Registerable`1
  name: Registerable<Node>
  nameWithType: Registerable<Node>
  fullName: Altseed2.Registerable<Altseed2.Node>
  nameWithType.vb: Registerable(Of Node)
  fullName.vb: Altseed2.Registerable(Of Altseed2.Node)
  name.vb: Registerable(Of Node)
  spec.csharp:
  - uid: Altseed2.Registerable`1
    name: Registerable
    nameWithType: Registerable
    fullName: Altseed2.Registerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Altseed2.Registerable`1
    name: Registerable
    nameWithType: Registerable
    fullName: Altseed2.Registerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node
  commentId: T:Altseed2.Node
  parent: Altseed2
  name: Node
  nameWithType: Node
  fullName: Altseed2.Node
- uid: Altseed2.Node.Parent
  commentId: P:Altseed2.Node.Parent
  parent: Altseed2.Node
  name: Parent
  nameWithType: Node.Parent
  fullName: Altseed2.Node.Parent
- uid: Altseed2.Node.Status
  commentId: P:Altseed2.Node.Status
  parent: Altseed2.Node
  name: Status
  nameWithType: Node.Status
  fullName: Altseed2.Node.Status
- uid: Altseed2.Node.Children
  commentId: P:Altseed2.Node.Children
  parent: Altseed2.Node
  name: Children
  nameWithType: Node.Children
  fullName: Altseed2.Node.Children
- uid: Altseed2.Node.AddChildNode(Altseed2.Node)
  commentId: M:Altseed2.Node.AddChildNode(Altseed2.Node)
  parent: Altseed2.Node
  name: AddChildNode(Node)
  nameWithType: Node.AddChildNode(Node)
  fullName: Altseed2.Node.AddChildNode(Altseed2.Node)
  spec.csharp:
  - uid: Altseed2.Node.AddChildNode(Altseed2.Node)
    name: AddChildNode
    nameWithType: Node.AddChildNode
    fullName: Altseed2.Node.AddChildNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.AddChildNode(Altseed2.Node)
    name: AddChildNode
    nameWithType: Node.AddChildNode
    fullName: Altseed2.Node.AddChildNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.RemoveChildNode(Altseed2.Node)
  commentId: M:Altseed2.Node.RemoveChildNode(Altseed2.Node)
  parent: Altseed2.Node
  name: RemoveChildNode(Node)
  nameWithType: Node.RemoveChildNode(Node)
  fullName: Altseed2.Node.RemoveChildNode(Altseed2.Node)
  spec.csharp:
  - uid: Altseed2.Node.RemoveChildNode(Altseed2.Node)
    name: RemoveChildNode
    nameWithType: Node.RemoveChildNode
    fullName: Altseed2.Node.RemoveChildNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.RemoveChildNode(Altseed2.Node)
    name: RemoveChildNode
    nameWithType: Node.RemoveChildNode
    fullName: Altseed2.Node.RemoveChildNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.OnAdded
  commentId: M:Altseed2.Node.OnAdded
  parent: Altseed2.Node
  name: OnAdded()
  nameWithType: Node.OnAdded()
  fullName: Altseed2.Node.OnAdded()
  spec.csharp:
  - uid: Altseed2.Node.OnAdded
    name: OnAdded
    nameWithType: Node.OnAdded
    fullName: Altseed2.Node.OnAdded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.OnAdded
    name: OnAdded
    nameWithType: Node.OnAdded
    fullName: Altseed2.Node.OnAdded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.OnRemoved
  commentId: M:Altseed2.Node.OnRemoved
  parent: Altseed2.Node
  name: OnRemoved()
  nameWithType: Node.OnRemoved()
  fullName: Altseed2.Node.OnRemoved()
  spec.csharp:
  - uid: Altseed2.Node.OnRemoved
    name: OnRemoved
    nameWithType: Node.OnRemoved
    fullName: Altseed2.Node.OnRemoved
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.OnRemoved
    name: OnRemoved
    nameWithType: Node.OnRemoved
    fullName: Altseed2.Node.OnRemoved
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.OnUpdate
  commentId: M:Altseed2.Node.OnUpdate
  parent: Altseed2.Node
  name: OnUpdate()
  nameWithType: Node.OnUpdate()
  fullName: Altseed2.Node.OnUpdate()
  spec.csharp:
  - uid: Altseed2.Node.OnUpdate
    name: OnUpdate
    nameWithType: Node.OnUpdate
    fullName: Altseed2.Node.OnUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.OnUpdate
    name: OnUpdate
    nameWithType: Node.OnUpdate
    fullName: Altseed2.Node.OnUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateAncestors
  commentId: M:Altseed2.Node.EnumerateAncestors
  parent: Altseed2.Node
  name: EnumerateAncestors()
  nameWithType: Node.EnumerateAncestors()
  fullName: Altseed2.Node.EnumerateAncestors()
  spec.csharp:
  - uid: Altseed2.Node.EnumerateAncestors
    name: EnumerateAncestors
    nameWithType: Node.EnumerateAncestors
    fullName: Altseed2.Node.EnumerateAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateAncestors
    name: EnumerateAncestors
    nameWithType: Node.EnumerateAncestors
    fullName: Altseed2.Node.EnumerateAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateDescendants
  commentId: M:Altseed2.Node.EnumerateDescendants
  parent: Altseed2.Node
  name: EnumerateDescendants()
  nameWithType: Node.EnumerateDescendants()
  fullName: Altseed2.Node.EnumerateDescendants()
  spec.csharp:
  - uid: Altseed2.Node.EnumerateDescendants
    name: EnumerateDescendants
    nameWithType: Node.EnumerateDescendants
    fullName: Altseed2.Node.EnumerateDescendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateDescendants
    name: EnumerateDescendants
    nameWithType: Node.EnumerateDescendants
    fullName: Altseed2.Node.EnumerateDescendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateDescendants``1
  commentId: M:Altseed2.Node.EnumerateDescendants``1
  parent: Altseed2.Node
  name: EnumerateDescendants<T>()
  nameWithType: Node.EnumerateDescendants<T>()
  fullName: Altseed2.Node.EnumerateDescendants<T>()
  nameWithType.vb: Node.EnumerateDescendants(Of T)()
  fullName.vb: Altseed2.Node.EnumerateDescendants(Of T)()
  name.vb: EnumerateDescendants(Of T)()
  spec.csharp:
  - uid: Altseed2.Node.EnumerateDescendants``1
    name: EnumerateDescendants<T>
    nameWithType: Node.EnumerateDescendants<T>
    fullName: Altseed2.Node.EnumerateDescendants<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateDescendants``1
    name: EnumerateDescendants(Of T)
    nameWithType: Node.EnumerateDescendants(Of T)
    fullName: Altseed2.Node.EnumerateDescendants(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateDescendants``1(System.Func{{T},System.Boolean})
  commentId: M:Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
  parent: Altseed2.Node
  definition: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
  name: EnumerateDescendants<T>(Func<T, Boolean>)
  nameWithType: Node.EnumerateDescendants<T>(Func<T, Boolean>)
  fullName: Altseed2.Node.EnumerateDescendants<T>(System.Func<T, System.Boolean>)
  nameWithType.vb: Node.EnumerateDescendants(Of T)(Func(Of T, Boolean))
  fullName.vb: Altseed2.Node.EnumerateDescendants(Of T)(System.Func(Of T, System.Boolean))
  name.vb: EnumerateDescendants(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
    name: EnumerateDescendants<T>
    nameWithType: Node.EnumerateDescendants<T>
    fullName: Altseed2.Node.EnumerateDescendants<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
    name: EnumerateDescendants(Of T)
    nameWithType: Node.EnumerateDescendants(Of T)
    fullName: Altseed2.Node.EnumerateDescendants(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Altseed2.Registerable`1
  commentId: T:Altseed2.Registerable`1
  name: Registerable<T>
  nameWithType: Registerable<T>
  fullName: Altseed2.Registerable<T>
  nameWithType.vb: Registerable(Of T)
  fullName.vb: Altseed2.Registerable(Of T)
  name.vb: Registerable(Of T)
  spec.csharp:
  - uid: Altseed2.Registerable`1
    name: Registerable
    nameWithType: Registerable
    fullName: Altseed2.Registerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Altseed2.Registerable`1
    name: Registerable
    nameWithType: Registerable
    fullName: Altseed2.Registerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
  commentId: M:Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
  isExternal: true
  name: EnumerateDescendants<T>(Func<T, Boolean>)
  nameWithType: Node.EnumerateDescendants<T>(Func<T, Boolean>)
  fullName: Altseed2.Node.EnumerateDescendants<T>(System.Func<T, System.Boolean>)
  nameWithType.vb: Node.EnumerateDescendants(Of T)(Func(Of T, Boolean))
  fullName.vb: Altseed2.Node.EnumerateDescendants(Of T)(System.Func(Of T, System.Boolean))
  name.vb: EnumerateDescendants(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
    name: EnumerateDescendants<T>
    nameWithType: Node.EnumerateDescendants<T>
    fullName: Altseed2.Node.EnumerateDescendants<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
    name: EnumerateDescendants(Of T)
    nameWithType: Node.EnumerateDescendants(Of T)
    fullName: Altseed2.Node.EnumerateDescendants(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.TransitionNode
  commentId: T:Altseed2.TransitionNode
  parent: Altseed2
  name: TransitionNode
  nameWithType: TransitionNode
  fullName: Altseed2.TransitionNode
- uid: Altseed2.TransitionNode.#ctor*
  commentId: Overload:Altseed2.TransitionNode.#ctor
  name: TransitionNode
  nameWithType: TransitionNode.TransitionNode
  fullName: Altseed2.TransitionNode.TransitionNode
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Altseed2.TransitionNode.OnClosing*
  commentId: Overload:Altseed2.TransitionNode.OnClosing
  name: OnClosing
  nameWithType: TransitionNode.OnClosing
  fullName: Altseed2.TransitionNode.OnClosing
- uid: Altseed2.TransitionNode.OnOpening*
  commentId: Overload:Altseed2.TransitionNode.OnOpening
  name: OnOpening
  nameWithType: TransitionNode.OnOpening
  fullName: Altseed2.TransitionNode.OnOpening
- uid: Altseed2.TransitionNode.OnNodeSwapping*
  commentId: Overload:Altseed2.TransitionNode.OnNodeSwapping
  name: OnNodeSwapping
  nameWithType: TransitionNode.OnNodeSwapping
  fullName: Altseed2.TransitionNode.OnNodeSwapping
- uid: Altseed2.TransitionNode.OnNodeSwapped*
  commentId: Overload:Altseed2.TransitionNode.OnNodeSwapped
  name: OnNodeSwapped
  nameWithType: TransitionNode.OnNodeSwapped
  fullName: Altseed2.TransitionNode.OnNodeSwapped
- uid: Altseed2.TransitionNode.OnTransitionBegin*
  commentId: Overload:Altseed2.TransitionNode.OnTransitionBegin
  name: OnTransitionBegin
  nameWithType: TransitionNode.OnTransitionBegin
  fullName: Altseed2.TransitionNode.OnTransitionBegin
- uid: Altseed2.TransitionNode.OnTransitionEnd*
  commentId: Overload:Altseed2.TransitionNode.OnTransitionEnd
  name: OnTransitionEnd
  nameWithType: TransitionNode.OnTransitionEnd
  fullName: Altseed2.TransitionNode.OnTransitionEnd
- uid: Altseed2.TransitionNode.GetCoroutine*
  commentId: Overload:Altseed2.TransitionNode.GetCoroutine
  name: GetCoroutine
  nameWithType: TransitionNode.GetCoroutine
  fullName: Altseed2.TransitionNode.GetCoroutine
- uid: System.Collections.Generic.IEnumerator{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerator{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Int32>
  nameWithType: IEnumerator<Int32>
  fullName: System.Collections.Generic.IEnumerator<System.Int32>
  nameWithType.vb: IEnumerator(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Int32)
  name.vb: IEnumerator(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
