### YamlMime:ManagedReference
items:
- uid: Altseed2.Font
  commentId: T:Altseed2.Font
  id: Font
  parent: Altseed2
  children:
  - Altseed2.Font.AddImageGlyph(System.Char,Altseed2.Texture2D)
  - Altseed2.Font.AddImageGlyph(System.Int32,Altseed2.Texture2D)
  - Altseed2.Font.Ascent
  - Altseed2.Font.CreateImageFont(Altseed2.Font)
  - Altseed2.Font.Descent
  - Altseed2.Font.GenerateFontFile(System.String,System.String,System.Int32,System.String)
  - Altseed2.Font.GetFontTexture(System.Int32)
  - Altseed2.Font.GetGlyph(System.Int32)
  - Altseed2.Font.GetImageGlyph(System.Int32)
  - Altseed2.Font.GetKerning(System.Int32,System.Int32)
  - Altseed2.Font.IsStaticFont
  - Altseed2.Font.LineGap
  - Altseed2.Font.LoadDynamicFont(System.String,System.Int32)
  - Altseed2.Font.LoadDynamicFontStrict(System.String,System.Int32)
  - Altseed2.Font.LoadStaticFont(System.String)
  - Altseed2.Font.LoadStaticFontStrict(System.String)
  - Altseed2.Font.Path
  - Altseed2.Font.Size
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: Font
  fullName: Altseed2.Font
  type: Class
  source:
    remote:
      path: Engine/CorePartial/Font.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Font
    path: Src/Engine/CorePartial/Font.cs
    startLine: 7
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nフォント\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class Font : ISerializable, ICacheKeeper<Font>, IDeserializationCallback
    content.vb: >-
      <Serializable>

      Public NotInheritable Class Font
          Implements ISerializable, ICacheKeeper(Of Font), IDeserializationCallback
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.Serialization.IDeserializationCallback
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Altseed2.Font.Size
  commentId: P:Altseed2.Font.Size
  id: Size
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Font.Size
  fullName: Altseed2.Font.Size
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Size
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8610
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nフォントのサイズを取得する\n"
  example: []
  syntax:
    content: public int Size { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Size As Integer
  overload: Altseed2.Font.Size*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Font.Ascent
  commentId: P:Altseed2.Font.Ascent
  id: Ascent
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: Ascent
  nameWithType: Font.Ascent
  fullName: Altseed2.Font.Ascent
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Ascent
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8622
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nフォントのベースラインからトップラインまでの距離を取得する\n"
  example: []
  syntax:
    content: public int Ascent { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Ascent As Integer
  overload: Altseed2.Font.Ascent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Font.Descent
  commentId: P:Altseed2.Font.Descent
  id: Descent
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: Descent
  nameWithType: Font.Descent
  fullName: Altseed2.Font.Descent
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Descent
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8634
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nフォントのベースラインからボトムラインまでの距離を取得する\n"
  example: []
  syntax:
    content: public int Descent { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Descent As Integer
  overload: Altseed2.Font.Descent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Font.LineGap
  commentId: P:Altseed2.Font.LineGap
  id: LineGap
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: LineGap
  nameWithType: Font.LineGap
  fullName: Altseed2.Font.LineGap
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: LineGap
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8646
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nフォントの行間の距離を取得する\n"
  example: []
  syntax:
    content: public int LineGap { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LineGap As Integer
  overload: Altseed2.Font.LineGap*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Font.IsStaticFont
  commentId: P:Altseed2.Font.IsStaticFont
  id: IsStaticFont
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: IsStaticFont
  nameWithType: Font.IsStaticFont
  fullName: Altseed2.Font.IsStaticFont
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: IsStaticFont
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8658
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nStaticFontか否か\n"
  example: []
  syntax:
    content: public bool IsStaticFont { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStaticFont As Boolean
  overload: Altseed2.Font.IsStaticFont*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Font.Path
  commentId: P:Altseed2.Font.Path
  id: Path
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Font.Path
  fullName: Altseed2.Font.Path
  type: Property
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Path
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8670
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n読み込んだファイルのパスを取得します。\n"
  example: []
  syntax:
    content: public string Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Path As String
  overload: Altseed2.Font.Path*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Altseed2.Font.LoadDynamicFont(System.String,System.Int32)
  commentId: M:Altseed2.Font.LoadDynamicFont(System.String,System.Int32)
  id: LoadDynamicFont(System.String,System.Int32)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: LoadDynamicFont(String, Int32)
  nameWithType: Font.LoadDynamicFont(String, Int32)
  fullName: Altseed2.Font.LoadDynamicFont(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: LoadDynamicFont
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8686
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n動的にフォントを生成します\n"
  example: []
  syntax:
    content: public static Font LoadDynamicFont(string path, int size)
    parameters:
    - id: path
      type: System.String
      description: 読み込むフォントのパス
    - id: size
      type: System.Int32
      description: フォントのサイズ
    return:
      type: Altseed2.Font
      description: <code data-dev-comment-type="paramref" class="paramref">path</code>の指定するファイルから生成されたフォント
    content.vb: Public Shared Function LoadDynamicFont(path As String, size As Integer) As Font
  overload: Altseed2.Font.LoadDynamicFont*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>がnull
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Font.LoadStaticFont(System.String)
  commentId: M:Altseed2.Font.LoadStaticFont(System.String)
  id: LoadStaticFont(System.String)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: LoadStaticFont(String)
  nameWithType: Font.LoadStaticFont(String)
  fullName: Altseed2.Font.LoadStaticFont(System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: LoadStaticFont
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8699
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n静的にフォントを生成します\n"
  example: []
  syntax:
    content: public static Font LoadStaticFont(string path)
    parameters:
    - id: path
      type: System.String
      description: 読み込むフォントのパス
    return:
      type: Altseed2.Font
      description: <code data-dev-comment-type="paramref" class="paramref">path</code>の指定するファイルから生成されたフォント
    content.vb: Public Shared Function LoadStaticFont(path As String) As Font
  overload: Altseed2.Font.LoadStaticFont*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>がnull
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Font.GenerateFontFile(System.String,System.String,System.Int32,System.String)
  commentId: M:Altseed2.Font.GenerateFontFile(System.String,System.String,System.Int32,System.String)
  id: GenerateFontFile(System.String,System.String,System.Int32,System.String)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: GenerateFontFile(String, String, Int32, String)
  nameWithType: Font.GenerateFontFile(String, String, Int32, String)
  fullName: Altseed2.Font.GenerateFontFile(System.String, System.String, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: GenerateFontFile
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8715
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\na2fフォントを生成します\n"
  example: []
  syntax:
    content: public static bool GenerateFontFile(string dynamicFontPath, string staticFontPath, int size, string characters)
    parameters:
    - id: dynamicFontPath
      type: System.String
      description: 読み込むtruetypeフォントのパス
    - id: staticFontPath
      type: System.String
      description: 生成するa2fフォントのパス
    - id: size
      type: System.Int32
      description: フォントのサイズ
    - id: characters
      type: System.String
      description: フォント化させる文字列
    return:
      type: System.Boolean
      description: 生成できたか否か
    content.vb: Public Shared Function GenerateFontFile(dynamicFontPath As String, staticFontPath As String, size As Integer, characters As String) As Boolean
  overload: Altseed2.Font.GenerateFontFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">dynamicFontPath</code>, <code data-dev-comment-type="paramref" class="paramref">staticFontPath</code>のいずれかがnull
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Font.GetGlyph(System.Int32)
  commentId: M:Altseed2.Font.GetGlyph(System.Int32)
  id: GetGlyph(System.Int32)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: GetGlyph(Int32)
  nameWithType: Font.GetGlyph(Int32)
  fullName: Altseed2.Font.GetGlyph(System.Int32)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: GetGlyph
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8728
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n文字情報を取得する\n"
  example: []
  syntax:
    content: public Glyph GetGlyph(int character)
    parameters:
    - id: character
      type: System.Int32
      description: 文字
    return:
      type: Altseed2.Glyph
      description: 文字
    content.vb: Public Function GetGlyph(character As Integer) As Glyph
  overload: Altseed2.Font.GetGlyph*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Font.GetFontTexture(System.Int32)
  commentId: M:Altseed2.Font.GetFontTexture(System.Int32)
  id: GetFontTexture(System.Int32)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: GetFontTexture(Int32)
  nameWithType: Font.GetFontTexture(Int32)
  fullName: Altseed2.Font.GetFontTexture(System.Int32)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: GetFontTexture
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8739
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n文字列テクスチャを得る\n"
  example: []
  syntax:
    content: public Texture2D GetFontTexture(int index)
    parameters:
    - id: index
      type: System.Int32
      description: インデックス
    return:
      type: Altseed2.Texture2D
      description: テクスチャ
    content.vb: Public Function GetFontTexture(index As Integer) As Texture2D
  overload: Altseed2.Font.GetFontTexture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Font.GetKerning(System.Int32,System.Int32)
  commentId: M:Altseed2.Font.GetKerning(System.Int32,System.Int32)
  id: GetKerning(System.Int32,System.Int32)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: GetKerning(Int32, Int32)
  nameWithType: Font.GetKerning(Int32, Int32)
  fullName: Altseed2.Font.GetKerning(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: GetKerning
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8751
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nカーニングを得る\n"
  example: []
  syntax:
    content: public int GetKerning(int c1, int c2)
    parameters:
    - id: c1
      type: System.Int32
      description: 文字1
    - id: c2
      type: System.Int32
      description: 文字2
    return:
      type: System.Int32
      description: カーニング
    content.vb: Public Function GetKerning(c1 As Integer, c2 As Integer) As Integer
  overload: Altseed2.Font.GetKerning*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Font.CreateImageFont(Altseed2.Font)
  commentId: M:Altseed2.Font.CreateImageFont(Altseed2.Font)
  id: CreateImageFont(Altseed2.Font)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: CreateImageFont(Font)
  nameWithType: Font.CreateImageFont(Font)
  fullName: Altseed2.Font.CreateImageFont(Altseed2.Font)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: CreateImageFont
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8763
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nテクスチャ追加対応フォントを生成します\n"
  example: []
  syntax:
    content: public static Font CreateImageFont(Font baseFont)
    parameters:
    - id: baseFont
      type: Altseed2.Font
      description: ベースとなるフォント
    return:
      type: Altseed2.Font
      description: テクスチャ追加対応フォント
    content.vb: Public Shared Function CreateImageFont(baseFont As Font) As Font
  overload: Altseed2.Font.CreateImageFont*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">baseFont</code>がnull
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Font.AddImageGlyph(System.Int32,Altseed2.Texture2D)
  commentId: M:Altseed2.Font.AddImageGlyph(System.Int32,Altseed2.Texture2D)
  id: AddImageGlyph(System.Int32,Altseed2.Texture2D)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: AddImageGlyph(Int32, Texture2D)
  nameWithType: Font.AddImageGlyph(Int32, Texture2D)
  fullName: Altseed2.Font.AddImageGlyph(System.Int32, Altseed2.Texture2D)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: AddImageGlyph
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8775
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nテクスチャ文字を追加する\n"
  example: []
  syntax:
    content: void AddImageGlyph(int character, Texture2D texture)
    parameters:
    - id: character
      type: System.Int32
      description: 文字
    - id: texture
      type: Altseed2.Texture2D
      description: テクスチャ
    content.vb: Sub AddImageGlyph(character As Integer, texture As Texture2D)
  overload: Altseed2.Font.AddImageGlyph*
- uid: Altseed2.Font.GetImageGlyph(System.Int32)
  commentId: M:Altseed2.Font.GetImageGlyph(System.Int32)
  id: GetImageGlyph(System.Int32)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: GetImageGlyph(Int32)
  nameWithType: Font.GetImageGlyph(Int32)
  fullName: Altseed2.Font.GetImageGlyph(System.Int32)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: GetImageGlyph
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 8785
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nテクスチャ文字を取得する\n"
  example: []
  syntax:
    content: public Texture2D GetImageGlyph(int character)
    parameters:
    - id: character
      type: System.Int32
      description: 文字
    return:
      type: Altseed2.Texture2D
      description: テクスチャ文字
    content.vb: Public Function GetImageGlyph(character As Integer) As Texture2D
  overload: Altseed2.Font.GetImageGlyph*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Font.LoadDynamicFontStrict(System.String,System.Int32)
  commentId: M:Altseed2.Font.LoadDynamicFontStrict(System.String,System.Int32)
  id: LoadDynamicFontStrict(System.String,System.Int32)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: LoadDynamicFontStrict(String, Int32)
  nameWithType: Font.LoadDynamicFontStrict(String, Int32)
  fullName: Altseed2.Font.LoadDynamicFontStrict(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/Font.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: LoadDynamicFontStrict
    path: Src/Engine/CorePartial/Font.cs
    startLine: 44
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n動的にフォントを読み込みます。\n"
  example: []
  syntax:
    content: public static Font LoadDynamicFontStrict(string path, int size)
    parameters:
    - id: path
      type: System.String
      description: フォントファイルのパス
    - id: size
      type: System.Int32
      description: フォントサイズ
    return:
      type: Altseed2.Font
      description: 動的に生成されるフォント
    content.vb: Public Shared Function LoadDynamicFontStrict(path As String, size As Integer) As Font
  overload: Altseed2.Font.LoadDynamicFontStrict*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>が空白文字のみからなる又は使用できない文字を含む
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>がnull
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code data-dev-comment-type="paramref" class="paramref">size</code>が0以下
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>で指定したファイルが見つからない
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>が長すぎる
  - type: System.SystemException
    commentId: T:System.SystemException
    description: ファイルが破損していたまたは読み込みに失敗した
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Font.LoadStaticFontStrict(System.String)
  commentId: M:Altseed2.Font.LoadStaticFontStrict(System.String)
  id: LoadStaticFontStrict(System.String)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: LoadStaticFontStrict(String)
  nameWithType: Font.LoadStaticFontStrict(String)
  fullName: Altseed2.Font.LoadStaticFontStrict(System.String)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/Font.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: LoadStaticFontStrict
    path: Src/Engine/CorePartial/Font.cs
    startLine: 62
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n静的にフォントを読み込みます。\n"
  example: []
  syntax:
    content: public static Font LoadStaticFontStrict(string path)
    parameters:
    - id: path
      type: System.String
      description: フォントファイルのパス
    return:
      type: Altseed2.Font
      description: 静的に生成されるフォント
    content.vb: Public Shared Function LoadStaticFontStrict(path As String) As Font
  overload: Altseed2.Font.LoadStaticFontStrict*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>が空白文字のみからなる又は使用できない文字を含む
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>がnull
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>で指定したファイルが見つからない
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: <code data-dev-comment-type="paramref" class="paramref">path</code>が長すぎる
  - type: System.SystemException
    commentId: T:System.SystemException
    description: ファイルが破損していたまたは読み込みに失敗した
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Font.AddImageGlyph(System.Char,Altseed2.Texture2D)
  commentId: M:Altseed2.Font.AddImageGlyph(System.Char,Altseed2.Texture2D)
  id: AddImageGlyph(System.Char,Altseed2.Texture2D)
  parent: Altseed2.Font
  langs:
  - csharp
  - vb
  name: AddImageGlyph(Char, Texture2D)
  nameWithType: Font.AddImageGlyph(Char, Texture2D)
  fullName: Altseed2.Font.AddImageGlyph(System.Char, Altseed2.Texture2D)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/Font.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: AddImageGlyph
    path: Src/Engine/CorePartial/Font.cs
    startLine: 74
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nテクスチャ文字を追加します。\n"
  example: []
  syntax:
    content: public void AddImageGlyph(char character, Texture2D texture)
    parameters:
    - id: character
      type: System.Char
      description: 文字
    - id: texture
      type: Altseed2.Texture2D
      description: テクスチャ
    content.vb: Public Sub AddImageGlyph(character As Char, texture As Texture2D)
  overload: Altseed2.Font.AddImageGlyph*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.Serialization.IDeserializationCallback
  commentId: T:System.Runtime.Serialization.IDeserializationCallback
  parent: System.Runtime.Serialization
  isExternal: true
  name: IDeserializationCallback
  nameWithType: IDeserializationCallback
  fullName: System.Runtime.Serialization.IDeserializationCallback
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Altseed2.Font.Size*
  commentId: Overload:Altseed2.Font.Size
  name: Size
  nameWithType: Font.Size
  fullName: Altseed2.Font.Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Altseed2.Font.Ascent*
  commentId: Overload:Altseed2.Font.Ascent
  name: Ascent
  nameWithType: Font.Ascent
  fullName: Altseed2.Font.Ascent
- uid: Altseed2.Font.Descent*
  commentId: Overload:Altseed2.Font.Descent
  name: Descent
  nameWithType: Font.Descent
  fullName: Altseed2.Font.Descent
- uid: Altseed2.Font.LineGap*
  commentId: Overload:Altseed2.Font.LineGap
  name: LineGap
  nameWithType: Font.LineGap
  fullName: Altseed2.Font.LineGap
- uid: Altseed2.Font.IsStaticFont*
  commentId: Overload:Altseed2.Font.IsStaticFont
  name: IsStaticFont
  nameWithType: Font.IsStaticFont
  fullName: Altseed2.Font.IsStaticFont
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Altseed2.Font.Path*
  commentId: Overload:Altseed2.Font.Path
  name: Path
  nameWithType: Font.Path
  fullName: Altseed2.Font.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Altseed2.Font.LoadDynamicFont*
  commentId: Overload:Altseed2.Font.LoadDynamicFont
  name: LoadDynamicFont
  nameWithType: Font.LoadDynamicFont
  fullName: Altseed2.Font.LoadDynamicFont
- uid: Altseed2.Font
  commentId: T:Altseed2.Font
  parent: Altseed2
  name: Font
  nameWithType: Font
  fullName: Altseed2.Font
- uid: Altseed2.Font.LoadStaticFont*
  commentId: Overload:Altseed2.Font.LoadStaticFont
  name: LoadStaticFont
  nameWithType: Font.LoadStaticFont
  fullName: Altseed2.Font.LoadStaticFont
- uid: Altseed2.Font.GenerateFontFile*
  commentId: Overload:Altseed2.Font.GenerateFontFile
  name: GenerateFontFile
  nameWithType: Font.GenerateFontFile
  fullName: Altseed2.Font.GenerateFontFile
- uid: Altseed2.Font.GetGlyph*
  commentId: Overload:Altseed2.Font.GetGlyph
  name: GetGlyph
  nameWithType: Font.GetGlyph
  fullName: Altseed2.Font.GetGlyph
- uid: Altseed2.Glyph
  commentId: T:Altseed2.Glyph
  parent: Altseed2
  name: Glyph
  nameWithType: Glyph
  fullName: Altseed2.Glyph
- uid: Altseed2.Font.GetFontTexture*
  commentId: Overload:Altseed2.Font.GetFontTexture
  name: GetFontTexture
  nameWithType: Font.GetFontTexture
  fullName: Altseed2.Font.GetFontTexture
- uid: Altseed2.Texture2D
  commentId: T:Altseed2.Texture2D
  parent: Altseed2
  name: Texture2D
  nameWithType: Texture2D
  fullName: Altseed2.Texture2D
- uid: Altseed2.Font.GetKerning*
  commentId: Overload:Altseed2.Font.GetKerning
  name: GetKerning
  nameWithType: Font.GetKerning
  fullName: Altseed2.Font.GetKerning
- uid: Altseed2.Font.CreateImageFont*
  commentId: Overload:Altseed2.Font.CreateImageFont
  name: CreateImageFont
  nameWithType: Font.CreateImageFont
  fullName: Altseed2.Font.CreateImageFont
- uid: Altseed2.Font.AddImageGlyph*
  commentId: Overload:Altseed2.Font.AddImageGlyph
  name: AddImageGlyph
  nameWithType: Font.AddImageGlyph
  fullName: Altseed2.Font.AddImageGlyph
- uid: Altseed2.Font.GetImageGlyph*
  commentId: Overload:Altseed2.Font.GetImageGlyph
  name: GetImageGlyph
  nameWithType: Font.GetImageGlyph
  fullName: Altseed2.Font.GetImageGlyph
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
- uid: System.IO.PathTooLongException
  commentId: T:System.IO.PathTooLongException
  isExternal: true
- uid: System.SystemException
  commentId: T:System.SystemException
  isExternal: true
- uid: Altseed2.Font.LoadDynamicFontStrict*
  commentId: Overload:Altseed2.Font.LoadDynamicFontStrict
  name: LoadDynamicFontStrict
  nameWithType: Font.LoadDynamicFontStrict
  fullName: Altseed2.Font.LoadDynamicFontStrict
- uid: Altseed2.Font.LoadStaticFontStrict*
  commentId: Overload:Altseed2.Font.LoadStaticFontStrict
  name: LoadStaticFontStrict
  nameWithType: Font.LoadStaticFontStrict
  fullName: Altseed2.Font.LoadStaticFontStrict
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
