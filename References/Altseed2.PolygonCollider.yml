### YamlMime:ManagedReference
items:
- uid: Altseed2.PolygonCollider
  commentId: T:Altseed2.PolygonCollider
  id: PolygonCollider
  parent: Altseed2
  children:
  - Altseed2.PolygonCollider.Create
  - Altseed2.PolygonCollider.SetVertexes(System.Collections.Generic.IEnumerable{Altseed2.Vector2F})
  - Altseed2.PolygonCollider.Vertexes
  langs:
  - csharp
  - vb
  name: PolygonCollider
  nameWithType: PolygonCollider
  fullName: Altseed2.PolygonCollider
  type: Class
  source:
    remote:
      path: Engine/CorePartial/Collider.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: PolygonCollider
    path: Src/Engine/CorePartial/Collider.cs
    startLine: 74
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n多角形コライダのクラス\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class PolygonCollider : Collider, ICacheKeeper<Collider>, ISerializable, ICacheKeeper<PolygonCollider>
    content.vb: >-
      <Serializable>

      Public Class PolygonCollider
          Inherits Collider
          Implements ICacheKeeper(Of Collider), ISerializable, ICacheKeeper(Of PolygonCollider)
  inheritance:
  - System.Object
  - Altseed2.Collider
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
  - Altseed2.Collider.Position
  - Altseed2.Collider.Rotation
  - Altseed2.Collider.Transform
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altseed2.PolygonCollider.Create
  commentId: M:Altseed2.PolygonCollider.Create
  id: Create
  parent: Altseed2.PolygonCollider
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: PolygonCollider.Create()
  fullName: Altseed2.PolygonCollider.Create()
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Create
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 14558
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n多角形コライダを作成します。\n"
  example: []
  syntax:
    content: public static PolygonCollider Create()
    return:
      type: Altseed2.PolygonCollider
    content.vb: Public Shared Function Create As PolygonCollider
  overload: Altseed2.PolygonCollider.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.PolygonCollider.Vertexes
  commentId: P:Altseed2.PolygonCollider.Vertexes
  id: Vertexes
  parent: Altseed2.PolygonCollider
  langs:
  - csharp
  - vb
  name: Vertexes
  nameWithType: PolygonCollider.Vertexes
  fullName: Altseed2.PolygonCollider.Vertexes
  type: Property
  source:
    remote:
      path: Engine/CorePartial/Collider.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Vertexes
    path: Src/Engine/CorePartial/Collider.cs
    startLine: 83
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n頂点情報のコレクションを取得または設定します。\n"
  example: []
  syntax:
    content: public IReadOnlyList<Vector2F> Vertexes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Altseed2.Vector2F}
    content.vb: Public Property Vertexes As IReadOnlyList(Of Vector2F)
  overload: Altseed2.PolygonCollider.Vertexes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.PolygonCollider.SetVertexes(System.Collections.Generic.IEnumerable{Altseed2.Vector2F})
  commentId: M:Altseed2.PolygonCollider.SetVertexes(System.Collections.Generic.IEnumerable{Altseed2.Vector2F})
  id: SetVertexes(System.Collections.Generic.IEnumerable{Altseed2.Vector2F})
  parent: Altseed2.PolygonCollider
  langs:
  - csharp
  - vb
  name: SetVertexes(IEnumerable<Vector2F>)
  nameWithType: PolygonCollider.SetVertexes(IEnumerable<Vector2F>)
  fullName: Altseed2.PolygonCollider.SetVertexes(System.Collections.Generic.IEnumerable<Altseed2.Vector2F>)
  type: Method
  source:
    remote:
      path: Engine/CorePartial/Collider.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: SetVertexes
    path: Src/Engine/CorePartial/Collider.cs
    startLine: 130
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n指定した座標に頂点を設定します。\n"
  example: []
  syntax:
    content: public void SetVertexes(IEnumerable<Vector2F> positions)
    parameters:
    - id: positions
      type: System.Collections.Generic.IEnumerable{Altseed2.Vector2F}
      description: 設定する座標
    content.vb: Public Sub SetVertexes(positions As IEnumerable(Of Vector2F))
  overload: Altseed2.PolygonCollider.SetVertexes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">positions</code>がnull
  nameWithType.vb: PolygonCollider.SetVertexes(IEnumerable(Of Vector2F))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Altseed2.PolygonCollider.SetVertexes(System.Collections.Generic.IEnumerable(Of Altseed2.Vector2F))
  name.vb: SetVertexes(IEnumerable(Of Vector2F))
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Altseed2.Collider
  commentId: T:Altseed2.Collider
  parent: Altseed2
  name: Collider
  nameWithType: Collider
  fullName: Altseed2.Collider
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
  commentId: M:Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
  parent: Altseed2.Collider
  name: GetIsCollidedWith(Collider)
  nameWithType: Collider.GetIsCollidedWith(Collider)
  fullName: Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
  spec.csharp:
  - uid: Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
    name: GetIsCollidedWith
    nameWithType: Collider.GetIsCollidedWith
    fullName: Altseed2.Collider.GetIsCollidedWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Collider
    name: Collider
    nameWithType: Collider
    fullName: Altseed2.Collider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
    name: GetIsCollidedWith
    nameWithType: Collider.GetIsCollidedWith
    fullName: Altseed2.Collider.GetIsCollidedWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Collider
    name: Collider
    nameWithType: Collider
    fullName: Altseed2.Collider
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Collider.Position
  commentId: P:Altseed2.Collider.Position
  parent: Altseed2.Collider
  name: Position
  nameWithType: Collider.Position
  fullName: Altseed2.Collider.Position
- uid: Altseed2.Collider.Rotation
  commentId: P:Altseed2.Collider.Rotation
  parent: Altseed2.Collider
  name: Rotation
  nameWithType: Collider.Rotation
  fullName: Altseed2.Collider.Rotation
- uid: Altseed2.Collider.Transform
  commentId: P:Altseed2.Collider.Transform
  parent: Altseed2.Collider
  name: Transform
  nameWithType: Collider.Transform
  fullName: Altseed2.Collider.Transform
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Altseed2.PolygonCollider.Create*
  commentId: Overload:Altseed2.PolygonCollider.Create
  name: Create
  nameWithType: PolygonCollider.Create
  fullName: Altseed2.PolygonCollider.Create
- uid: Altseed2.PolygonCollider
  commentId: T:Altseed2.PolygonCollider
  parent: Altseed2
  name: PolygonCollider
  nameWithType: PolygonCollider
  fullName: Altseed2.PolygonCollider
- uid: Altseed2.PolygonCollider.Vertexes*
  commentId: Overload:Altseed2.PolygonCollider.Vertexes
  name: Vertexes
  nameWithType: PolygonCollider.Vertexes
  fullName: Altseed2.PolygonCollider.Vertexes
- uid: System.Collections.Generic.IReadOnlyList{Altseed2.Vector2F}
  commentId: T:System.Collections.Generic.IReadOnlyList{Altseed2.Vector2F}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Vector2F>
  nameWithType: IReadOnlyList<Vector2F>
  fullName: System.Collections.Generic.IReadOnlyList<Altseed2.Vector2F>
  nameWithType.vb: IReadOnlyList(Of Vector2F)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Altseed2.Vector2F)
  name.vb: IReadOnlyList(Of Vector2F)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altseed2.Vector2F
    name: Vector2F
    nameWithType: Vector2F
    fullName: Altseed2.Vector2F
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altseed2.Vector2F
    name: Vector2F
    nameWithType: Vector2F
    fullName: Altseed2.Vector2F
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Altseed2.PolygonCollider.SetVertexes*
  commentId: Overload:Altseed2.PolygonCollider.SetVertexes
  name: SetVertexes
  nameWithType: PolygonCollider.SetVertexes
  fullName: Altseed2.PolygonCollider.SetVertexes
- uid: System.Collections.Generic.IEnumerable{Altseed2.Vector2F}
  commentId: T:System.Collections.Generic.IEnumerable{Altseed2.Vector2F}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Vector2F>
  nameWithType: IEnumerable<Vector2F>
  fullName: System.Collections.Generic.IEnumerable<Altseed2.Vector2F>
  nameWithType.vb: IEnumerable(Of Vector2F)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Altseed2.Vector2F)
  name.vb: IEnumerable(Of Vector2F)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altseed2.Vector2F
    name: Vector2F
    nameWithType: Vector2F
    fullName: Altseed2.Vector2F
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altseed2.Vector2F
    name: Vector2F
    nameWithType: Vector2F
    fullName: Altseed2.Vector2F
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
