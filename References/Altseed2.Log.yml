### YamlMime:ManagedReference
items:
- uid: Altseed2.Log
  commentId: T:Altseed2.Log
  id: Log
  parent: Altseed2
  children:
  - Altseed2.Log.Critical(Altseed2.LogCategory,System.String)
  - Altseed2.Log.Debug(Altseed2.LogCategory,System.String)
  - Altseed2.Log.Error(Altseed2.LogCategory,System.String)
  - Altseed2.Log.Info(Altseed2.LogCategory,System.String)
  - Altseed2.Log.SetLevel(Altseed2.LogCategory,Altseed2.LogLevel)
  - Altseed2.Log.Trace(Altseed2.LogCategory,System.String)
  - Altseed2.Log.Warn(Altseed2.LogCategory,System.String)
  - Altseed2.Log.Write(Altseed2.LogCategory,Altseed2.LogLevel,System.String)
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: Log
  fullName: Altseed2.Log
  type: Class
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Log
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13549
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nログを出力するクラス\n"
  example: []
  syntax:
    content: public sealed class Log
    content.vb: Public NotInheritable Class Log
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Altseed2.Log.Write(Altseed2.LogCategory,Altseed2.LogLevel,System.String)
  commentId: M:Altseed2.Log.Write(Altseed2.LogCategory,Altseed2.LogLevel,System.String)
  id: Write(Altseed2.LogCategory,Altseed2.LogLevel,System.String)
  parent: Altseed2.Log
  langs:
  - csharp
  - vb
  name: Write(LogCategory, LogLevel, String)
  nameWithType: Log.Write(LogCategory, LogLevel, String)
  fullName: Altseed2.Log.Write(Altseed2.LogCategory, Altseed2.LogLevel, System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Write
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13643
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nログを出力します。\n"
  example: []
  syntax:
    content: public void Write(LogCategory category, LogLevel level, string message)
    parameters:
    - id: category
      type: Altseed2.LogCategory
    - id: level
      type: Altseed2.LogLevel
    - id: message
      type: System.String
    content.vb: Public Sub Write(category As LogCategory, level As LogLevel, message As String)
  overload: Altseed2.Log.Write*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Log.Trace(Altseed2.LogCategory,System.String)
  commentId: M:Altseed2.Log.Trace(Altseed2.LogCategory,System.String)
  id: Trace(Altseed2.LogCategory,System.String)
  parent: Altseed2.Log
  langs:
  - csharp
  - vb
  name: Trace(LogCategory, String)
  nameWithType: Log.Trace(LogCategory, String)
  fullName: Altseed2.Log.Trace(Altseed2.LogCategory, System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Trace
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13651
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.LogLevel.Trace\" data-throw-if-not-resolved=\"false\"></xref>でログを出力します。\n"
  example: []
  syntax:
    content: public void Trace(LogCategory category, string message)
    parameters:
    - id: category
      type: Altseed2.LogCategory
    - id: message
      type: System.String
    content.vb: Public Sub Trace(category As LogCategory, message As String)
  overload: Altseed2.Log.Trace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Log.Debug(Altseed2.LogCategory,System.String)
  commentId: M:Altseed2.Log.Debug(Altseed2.LogCategory,System.String)
  id: Debug(Altseed2.LogCategory,System.String)
  parent: Altseed2.Log
  langs:
  - csharp
  - vb
  name: Debug(LogCategory, String)
  nameWithType: Log.Debug(LogCategory, String)
  fullName: Altseed2.Log.Debug(Altseed2.LogCategory, System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Debug
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13659
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.LogLevel.Debug\" data-throw-if-not-resolved=\"false\"></xref>でログを出力します。\n"
  example: []
  syntax:
    content: public void Debug(LogCategory category, string message)
    parameters:
    - id: category
      type: Altseed2.LogCategory
    - id: message
      type: System.String
    content.vb: Public Sub Debug(category As LogCategory, message As String)
  overload: Altseed2.Log.Debug*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Log.Info(Altseed2.LogCategory,System.String)
  commentId: M:Altseed2.Log.Info(Altseed2.LogCategory,System.String)
  id: Info(Altseed2.LogCategory,System.String)
  parent: Altseed2.Log
  langs:
  - csharp
  - vb
  name: Info(LogCategory, String)
  nameWithType: Log.Info(LogCategory, String)
  fullName: Altseed2.Log.Info(Altseed2.LogCategory, System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Info
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13667
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.LogLevel.Info\" data-throw-if-not-resolved=\"false\"></xref>でログを出力します。\n"
  example: []
  syntax:
    content: public void Info(LogCategory category, string message)
    parameters:
    - id: category
      type: Altseed2.LogCategory
    - id: message
      type: System.String
    content.vb: Public Sub Info(category As LogCategory, message As String)
  overload: Altseed2.Log.Info*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Log.Warn(Altseed2.LogCategory,System.String)
  commentId: M:Altseed2.Log.Warn(Altseed2.LogCategory,System.String)
  id: Warn(Altseed2.LogCategory,System.String)
  parent: Altseed2.Log
  langs:
  - csharp
  - vb
  name: Warn(LogCategory, String)
  nameWithType: Log.Warn(LogCategory, String)
  fullName: Altseed2.Log.Warn(Altseed2.LogCategory, System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Warn
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13675
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.LogLevel.Warn\" data-throw-if-not-resolved=\"false\"></xref>でログを出力します。\n"
  example: []
  syntax:
    content: public void Warn(LogCategory category, string message)
    parameters:
    - id: category
      type: Altseed2.LogCategory
    - id: message
      type: System.String
    content.vb: Public Sub Warn(category As LogCategory, message As String)
  overload: Altseed2.Log.Warn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Log.Error(Altseed2.LogCategory,System.String)
  commentId: M:Altseed2.Log.Error(Altseed2.LogCategory,System.String)
  id: Error(Altseed2.LogCategory,System.String)
  parent: Altseed2.Log
  langs:
  - csharp
  - vb
  name: Error(LogCategory, String)
  nameWithType: Log.Error(LogCategory, String)
  fullName: Altseed2.Log.Error(Altseed2.LogCategory, System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Error
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13683
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.LogLevel.Error\" data-throw-if-not-resolved=\"false\"></xref>でログを出力します。\n"
  example: []
  syntax:
    content: public void Error(LogCategory category, string message)
    parameters:
    - id: category
      type: Altseed2.LogCategory
    - id: message
      type: System.String
    content.vb: Public Sub Error(category As LogCategory, message As String)
  overload: Altseed2.Log.Error*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Log.Critical(Altseed2.LogCategory,System.String)
  commentId: M:Altseed2.Log.Critical(Altseed2.LogCategory,System.String)
  id: Critical(Altseed2.LogCategory,System.String)
  parent: Altseed2.Log
  langs:
  - csharp
  - vb
  name: Critical(LogCategory, String)
  nameWithType: Log.Critical(LogCategory, String)
  fullName: Altseed2.Log.Critical(Altseed2.LogCategory, System.String)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Critical
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13691
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.LogLevel.Critical\" data-throw-if-not-resolved=\"false\"></xref>でログを出力します。\n"
  example: []
  syntax:
    content: public void Critical(LogCategory category, string message)
    parameters:
    - id: category
      type: Altseed2.LogCategory
    - id: message
      type: System.String
    content.vb: Public Sub Critical(category As LogCategory, message As String)
  overload: Altseed2.Log.Critical*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Log.SetLevel(Altseed2.LogCategory,Altseed2.LogLevel)
  commentId: M:Altseed2.Log.SetLevel(Altseed2.LogCategory,Altseed2.LogLevel)
  id: SetLevel(Altseed2.LogCategory,Altseed2.LogLevel)
  parent: Altseed2.Log
  langs:
  - csharp
  - vb
  name: SetLevel(LogCategory, LogLevel)
  nameWithType: Log.SetLevel(LogCategory, LogLevel)
  fullName: Altseed2.Log.SetLevel(Altseed2.LogCategory, Altseed2.LogLevel)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: SetLevel
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13699
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nログレベルを設定します。\n"
  example: []
  syntax:
    content: public void SetLevel(LogCategory category, LogLevel level)
    parameters:
    - id: category
      type: Altseed2.LogCategory
    - id: level
      type: Altseed2.LogLevel
    content.vb: Public Sub SetLevel(category As LogCategory, level As LogLevel)
  overload: Altseed2.Log.SetLevel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Altseed2.Log.Write*
  commentId: Overload:Altseed2.Log.Write
  name: Write
  nameWithType: Log.Write
  fullName: Altseed2.Log.Write
- uid: Altseed2.LogCategory
  commentId: T:Altseed2.LogCategory
  parent: Altseed2
  name: LogCategory
  nameWithType: LogCategory
  fullName: Altseed2.LogCategory
- uid: Altseed2.LogLevel
  commentId: T:Altseed2.LogLevel
  parent: Altseed2
  name: LogLevel
  nameWithType: LogLevel
  fullName: Altseed2.LogLevel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Altseed2.LogLevel.Trace
  commentId: F:Altseed2.LogLevel.Trace
  isExternal: true
- uid: Altseed2.Log.Trace*
  commentId: Overload:Altseed2.Log.Trace
  name: Trace
  nameWithType: Log.Trace
  fullName: Altseed2.Log.Trace
- uid: Altseed2.LogLevel.Debug
  commentId: F:Altseed2.LogLevel.Debug
  isExternal: true
- uid: Altseed2.Log.Debug*
  commentId: Overload:Altseed2.Log.Debug
  name: Debug
  nameWithType: Log.Debug
  fullName: Altseed2.Log.Debug
- uid: Altseed2.LogLevel.Info
  commentId: F:Altseed2.LogLevel.Info
  isExternal: true
- uid: Altseed2.Log.Info*
  commentId: Overload:Altseed2.Log.Info
  name: Info
  nameWithType: Log.Info
  fullName: Altseed2.Log.Info
- uid: Altseed2.LogLevel.Warn
  commentId: F:Altseed2.LogLevel.Warn
  isExternal: true
- uid: Altseed2.Log.Warn*
  commentId: Overload:Altseed2.Log.Warn
  name: Warn
  nameWithType: Log.Warn
  fullName: Altseed2.Log.Warn
- uid: Altseed2.LogLevel.Error
  commentId: F:Altseed2.LogLevel.Error
  isExternal: true
- uid: Altseed2.Log.Error*
  commentId: Overload:Altseed2.Log.Error
  name: Error
  nameWithType: Log.Error
  fullName: Altseed2.Log.Error
- uid: Altseed2.LogLevel.Critical
  commentId: F:Altseed2.LogLevel.Critical
  isExternal: true
- uid: Altseed2.Log.Critical*
  commentId: Overload:Altseed2.Log.Critical
  name: Critical
  nameWithType: Log.Critical
  fullName: Altseed2.Log.Critical
- uid: Altseed2.Log.SetLevel*
  commentId: Overload:Altseed2.Log.SetLevel
  name: SetLevel
  nameWithType: Log.SetLevel
  fullName: Altseed2.Log.SetLevel
