### YamlMime:ManagedReference
items:
- uid: Altseed2.TransformNode
  commentId: T:Altseed2.TransformNode
  id: TransformNode
  parent: Altseed2
  children:
  - Altseed2.TransformNode.#ctor
  - Altseed2.TransformNode.AbsoluteTransform
  - Altseed2.TransformNode.Angle
  - Altseed2.TransformNode.CalcTransform
  - Altseed2.TransformNode.CenterPosition
  - Altseed2.TransformNode.ContentSize
  - Altseed2.TransformNode.HorizontalFlip
  - Altseed2.TransformNode.InheritedTransform
  - Altseed2.TransformNode.Position
  - Altseed2.TransformNode.PropagateTransform(Altseed2.Node,Altseed2.Matrix44F)
  - Altseed2.TransformNode.Scale
  - Altseed2.TransformNode.VerticalFlip
  langs:
  - csharp
  - vb
  name: TransformNode
  nameWithType: TransformNode
  fullName: Altseed2.TransformNode
  type: Class
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: TransformNode
    path: Src/Engine/Node/TransformNode.cs
    startLine: 34
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n変形行列を備えたノードのクラス\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class TransformNode : Node
    content.vb: >-
      <Serializable>

      Public Class TransformNode
          Inherits Node
  inheritance:
  - System.Object
  - Altseed2.Registerable{Altseed2.Node}
  - Altseed2.Node
  derivedClasses:
  - Altseed2.ColliderNode
  - Altseed2.PolygonNode
  - Altseed2.ShapeNode
  - Altseed2.SpriteNode
  - Altseed2.TextNode
  inheritedMembers:
  - Altseed2.Node.Parent
  - Altseed2.Node.Status
  - Altseed2.Node.Children
  - Altseed2.Node.AddChildNode(Altseed2.Node)
  - Altseed2.Node.RemoveChildNode(Altseed2.Node)
  - Altseed2.Node.OnAdded
  - Altseed2.Node.OnRemoved
  - Altseed2.Node.OnUpdate
  - Altseed2.Node.EnumerateAncestors
  - Altseed2.Node.EnumerateDescendants
  - Altseed2.Node.EnumerateDescendants``1
  - Altseed2.Node.EnumerateDescendants``1(System.Func{{T},System.Boolean})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altseed2.TransformNode.#ctor
  commentId: M:Altseed2.TransformNode.#ctor
  id: '#ctor'
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: TransformNode()
  nameWithType: TransformNode.TransformNode()
  fullName: Altseed2.TransformNode.TransformNode()
  type: Constructor
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: .ctor
    path: Src/Engine/Node/TransformNode.cs
    startLine: 40
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.TransformNode\" data-throw-if-not-resolved=\"false\"></xref>の新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public TransformNode()
    content.vb: Public Sub New
  overload: Altseed2.TransformNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.TransformNode.InheritedTransform
  commentId: P:Altseed2.TransformNode.InheritedTransform
  id: InheritedTransform
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: InheritedTransform
  nameWithType: TransformNode.InheritedTransform
  fullName: Altseed2.TransformNode.InheritedTransform
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: InheritedTransform
    path: Src/Engine/Node/TransformNode.cs
    startLine: 62
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n先祖の変形を加味した変形行列を取得します。\n"
  example: []
  syntax:
    content: public virtual Matrix44F InheritedTransform { get; }
    parameters: []
    return:
      type: Altseed2.Matrix44F
    content.vb: Public Overridable ReadOnly Property InheritedTransform As Matrix44F
  overload: Altseed2.TransformNode.InheritedTransform*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Altseed2.TransformNode.AbsoluteTransform
  commentId: P:Altseed2.TransformNode.AbsoluteTransform
  id: AbsoluteTransform
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: AbsoluteTransform
  nameWithType: TransformNode.AbsoluteTransform
  fullName: Altseed2.TransformNode.AbsoluteTransform
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: AbsoluteTransform
    path: Src/Engine/Node/TransformNode.cs
    startLine: 75
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n先祖の変形および<xref href=\"Altseed2.TransformNode.CenterPosition\" data-throw-if-not-resolved=\"false\"></xref>を加味した最終的な変形行列を取得します。\n"
  example: []
  syntax:
    content: public virtual Matrix44F AbsoluteTransform { get; }
    parameters: []
    return:
      type: Altseed2.Matrix44F
    content.vb: Public Overridable ReadOnly Property AbsoluteTransform As Matrix44F
  overload: Altseed2.TransformNode.AbsoluteTransform*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Altseed2.TransformNode.Angle
  commentId: P:Altseed2.TransformNode.Angle
  id: Angle
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: TransformNode.Angle
  fullName: Altseed2.TransformNode.Angle
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Angle
    path: Src/Engine/Node/TransformNode.cs
    startLine: 80
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n角度(度数法)を取得または設定します。\n"
  example: []
  syntax:
    content: public float Angle { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Angle As Single
  overload: Altseed2.TransformNode.Angle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.TransformNode.Position
  commentId: P:Altseed2.TransformNode.Position
  id: Position
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: TransformNode.Position
  fullName: Altseed2.TransformNode.Position
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Position
    path: Src/Engine/Node/TransformNode.cs
    startLine: 96
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n座標を取得または設定します。\n"
  example: []
  syntax:
    content: public Vector2F Position { get; set; }
    parameters: []
    return:
      type: Altseed2.Vector2F
    content.vb: Public Property Position As Vector2F
  overload: Altseed2.TransformNode.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.TransformNode.CenterPosition
  commentId: P:Altseed2.TransformNode.CenterPosition
  id: CenterPosition
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: CenterPosition
  nameWithType: TransformNode.CenterPosition
  fullName: Altseed2.TransformNode.CenterPosition
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: CenterPosition
    path: Src/Engine/Node/TransformNode.cs
    startLine: 112
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n中心となる座標をピクセル単位で取得または設定します。\n"
  example: []
  syntax:
    content: public Vector2F CenterPosition { get; set; }
    parameters: []
    return:
      type: Altseed2.Vector2F
    content.vb: Public Property CenterPosition As Vector2F
  overload: Altseed2.TransformNode.CenterPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.TransformNode.Scale
  commentId: P:Altseed2.TransformNode.Scale
  id: Scale
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: TransformNode.Scale
  fullName: Altseed2.TransformNode.Scale
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Scale
    path: Src/Engine/Node/TransformNode.cs
    startLine: 128
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n拡大率を取得または設定します。\n"
  example: []
  syntax:
    content: public Vector2F Scale { get; set; }
    parameters: []
    return:
      type: Altseed2.Vector2F
    content.vb: Public Property Scale As Vector2F
  overload: Altseed2.TransformNode.Scale*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.TransformNode.ContentSize
  commentId: P:Altseed2.TransformNode.ContentSize
  id: ContentSize
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: ContentSize
  nameWithType: TransformNode.ContentSize
  fullName: Altseed2.TransformNode.ContentSize
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: ContentSize
    path: Src/Engine/Node/TransformNode.cs
    startLine: 144
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nコンテンツのサイズを取得します。\n"
  example: []
  syntax:
    content: public virtual Vector2F ContentSize { get; }
    parameters: []
    return:
      type: Altseed2.Vector2F
    content.vb: Public Overridable ReadOnly Property ContentSize As Vector2F
  overload: Altseed2.TransformNode.ContentSize*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Altseed2.TransformNode.HorizontalFlip
  commentId: P:Altseed2.TransformNode.HorizontalFlip
  id: HorizontalFlip
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: HorizontalFlip
  nameWithType: TransformNode.HorizontalFlip
  fullName: Altseed2.TransformNode.HorizontalFlip
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: HorizontalFlip
    path: Src/Engine/Node/TransformNode.cs
    startLine: 149
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n左右を反転するかどうかを取得または設定します。\n"
  example: []
  syntax:
    content: public bool HorizontalFlip { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HorizontalFlip As Boolean
  overload: Altseed2.TransformNode.HorizontalFlip*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.TransformNode.VerticalFlip
  commentId: P:Altseed2.TransformNode.VerticalFlip
  id: VerticalFlip
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: VerticalFlip
  nameWithType: TransformNode.VerticalFlip
  fullName: Altseed2.TransformNode.VerticalFlip
  type: Property
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: VerticalFlip
    path: Src/Engine/Node/TransformNode.cs
    startLine: 165
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n上下を反転するかどうかを取得または設定します。\n"
  example: []
  syntax:
    content: public bool VerticalFlip { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property VerticalFlip As Boolean
  overload: Altseed2.TransformNode.VerticalFlip*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.TransformNode.CalcTransform
  commentId: M:Altseed2.TransformNode.CalcTransform
  id: CalcTransform
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: CalcTransform()
  nameWithType: TransformNode.CalcTransform()
  fullName: Altseed2.TransformNode.CalcTransform()
  type: Method
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: CalcTransform
    path: Src/Engine/Node/TransformNode.cs
    startLine: 409
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.TransformNode.Transform\" data-throw-if-not-resolved=\"false\"></xref> を再計算します。\n"
  example: []
  syntax:
    content: virtual void CalcTransform()
    content.vb: Overridable Sub CalcTransform
  overload: Altseed2.TransformNode.CalcTransform*
  modifiers.csharp:
  - virtual
  modifiers.vb:
  - Overridable
- uid: Altseed2.TransformNode.PropagateTransform(Altseed2.Node,Altseed2.Matrix44F)
  commentId: M:Altseed2.TransformNode.PropagateTransform(Altseed2.Node,Altseed2.Matrix44F)
  id: PropagateTransform(Altseed2.Node,Altseed2.Matrix44F)
  parent: Altseed2.TransformNode
  langs:
  - csharp
  - vb
  name: PropagateTransform(Node, Matrix44F)
  nameWithType: TransformNode.PropagateTransform(Node, Matrix44F)
  fullName: Altseed2.TransformNode.PropagateTransform(Altseed2.Node, Altseed2.Matrix44F)
  type: Method
  source:
    remote:
      path: Engine/Node/TransformNode.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: PropagateTransform
    path: Src/Engine/Node/TransformNode.cs
    startLine: 422
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n子孫ノードのうち<xref href=\"Altseed2.TransformNode\" data-throw-if-not-resolved=\"false\"></xref>に対して変換行列を伝播させます。\n"
  example: []
  syntax:
    content: void PropagateTransform(Node node, Matrix44F matrix)
    parameters:
    - id: node
      type: Altseed2.Node
    - id: matrix
      type: Altseed2.Matrix44F
    content.vb: Sub PropagateTransform(node As Node, matrix As Matrix44F)
  overload: Altseed2.TransformNode.PropagateTransform*
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Altseed2.Registerable{Altseed2.Node}
  commentId: T:Altseed2.Registerable{Altseed2.Node}
  parent: Altseed2
  definition: Altseed2.Registerable`1
  name: Registerable<Node>
  nameWithType: Registerable<Node>
  fullName: Altseed2.Registerable<Altseed2.Node>
  nameWithType.vb: Registerable(Of Node)
  fullName.vb: Altseed2.Registerable(Of Altseed2.Node)
  name.vb: Registerable(Of Node)
  spec.csharp:
  - uid: Altseed2.Registerable`1
    name: Registerable
    nameWithType: Registerable
    fullName: Altseed2.Registerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Altseed2.Registerable`1
    name: Registerable
    nameWithType: Registerable
    fullName: Altseed2.Registerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node
  commentId: T:Altseed2.Node
  parent: Altseed2
  name: Node
  nameWithType: Node
  fullName: Altseed2.Node
- uid: Altseed2.Node.Parent
  commentId: P:Altseed2.Node.Parent
  parent: Altseed2.Node
  name: Parent
  nameWithType: Node.Parent
  fullName: Altseed2.Node.Parent
- uid: Altseed2.Node.Status
  commentId: P:Altseed2.Node.Status
  parent: Altseed2.Node
  name: Status
  nameWithType: Node.Status
  fullName: Altseed2.Node.Status
- uid: Altseed2.Node.Children
  commentId: P:Altseed2.Node.Children
  parent: Altseed2.Node
  name: Children
  nameWithType: Node.Children
  fullName: Altseed2.Node.Children
- uid: Altseed2.Node.AddChildNode(Altseed2.Node)
  commentId: M:Altseed2.Node.AddChildNode(Altseed2.Node)
  parent: Altseed2.Node
  name: AddChildNode(Node)
  nameWithType: Node.AddChildNode(Node)
  fullName: Altseed2.Node.AddChildNode(Altseed2.Node)
  spec.csharp:
  - uid: Altseed2.Node.AddChildNode(Altseed2.Node)
    name: AddChildNode
    nameWithType: Node.AddChildNode
    fullName: Altseed2.Node.AddChildNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.AddChildNode(Altseed2.Node)
    name: AddChildNode
    nameWithType: Node.AddChildNode
    fullName: Altseed2.Node.AddChildNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.RemoveChildNode(Altseed2.Node)
  commentId: M:Altseed2.Node.RemoveChildNode(Altseed2.Node)
  parent: Altseed2.Node
  name: RemoveChildNode(Node)
  nameWithType: Node.RemoveChildNode(Node)
  fullName: Altseed2.Node.RemoveChildNode(Altseed2.Node)
  spec.csharp:
  - uid: Altseed2.Node.RemoveChildNode(Altseed2.Node)
    name: RemoveChildNode
    nameWithType: Node.RemoveChildNode
    fullName: Altseed2.Node.RemoveChildNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.RemoveChildNode(Altseed2.Node)
    name: RemoveChildNode
    nameWithType: Node.RemoveChildNode
    fullName: Altseed2.Node.RemoveChildNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Altseed2.Node
    name: Node
    nameWithType: Node
    fullName: Altseed2.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.OnAdded
  commentId: M:Altseed2.Node.OnAdded
  parent: Altseed2.Node
  name: OnAdded()
  nameWithType: Node.OnAdded()
  fullName: Altseed2.Node.OnAdded()
  spec.csharp:
  - uid: Altseed2.Node.OnAdded
    name: OnAdded
    nameWithType: Node.OnAdded
    fullName: Altseed2.Node.OnAdded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.OnAdded
    name: OnAdded
    nameWithType: Node.OnAdded
    fullName: Altseed2.Node.OnAdded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.OnRemoved
  commentId: M:Altseed2.Node.OnRemoved
  parent: Altseed2.Node
  name: OnRemoved()
  nameWithType: Node.OnRemoved()
  fullName: Altseed2.Node.OnRemoved()
  spec.csharp:
  - uid: Altseed2.Node.OnRemoved
    name: OnRemoved
    nameWithType: Node.OnRemoved
    fullName: Altseed2.Node.OnRemoved
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.OnRemoved
    name: OnRemoved
    nameWithType: Node.OnRemoved
    fullName: Altseed2.Node.OnRemoved
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.OnUpdate
  commentId: M:Altseed2.Node.OnUpdate
  parent: Altseed2.Node
  name: OnUpdate()
  nameWithType: Node.OnUpdate()
  fullName: Altseed2.Node.OnUpdate()
  spec.csharp:
  - uid: Altseed2.Node.OnUpdate
    name: OnUpdate
    nameWithType: Node.OnUpdate
    fullName: Altseed2.Node.OnUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.OnUpdate
    name: OnUpdate
    nameWithType: Node.OnUpdate
    fullName: Altseed2.Node.OnUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateAncestors
  commentId: M:Altseed2.Node.EnumerateAncestors
  parent: Altseed2.Node
  name: EnumerateAncestors()
  nameWithType: Node.EnumerateAncestors()
  fullName: Altseed2.Node.EnumerateAncestors()
  spec.csharp:
  - uid: Altseed2.Node.EnumerateAncestors
    name: EnumerateAncestors
    nameWithType: Node.EnumerateAncestors
    fullName: Altseed2.Node.EnumerateAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateAncestors
    name: EnumerateAncestors
    nameWithType: Node.EnumerateAncestors
    fullName: Altseed2.Node.EnumerateAncestors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateDescendants
  commentId: M:Altseed2.Node.EnumerateDescendants
  parent: Altseed2.Node
  name: EnumerateDescendants()
  nameWithType: Node.EnumerateDescendants()
  fullName: Altseed2.Node.EnumerateDescendants()
  spec.csharp:
  - uid: Altseed2.Node.EnumerateDescendants
    name: EnumerateDescendants
    nameWithType: Node.EnumerateDescendants
    fullName: Altseed2.Node.EnumerateDescendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateDescendants
    name: EnumerateDescendants
    nameWithType: Node.EnumerateDescendants
    fullName: Altseed2.Node.EnumerateDescendants
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateDescendants``1
  commentId: M:Altseed2.Node.EnumerateDescendants``1
  parent: Altseed2.Node
  name: EnumerateDescendants<T>()
  nameWithType: Node.EnumerateDescendants<T>()
  fullName: Altseed2.Node.EnumerateDescendants<T>()
  nameWithType.vb: Node.EnumerateDescendants(Of T)()
  fullName.vb: Altseed2.Node.EnumerateDescendants(Of T)()
  name.vb: EnumerateDescendants(Of T)()
  spec.csharp:
  - uid: Altseed2.Node.EnumerateDescendants``1
    name: EnumerateDescendants<T>
    nameWithType: Node.EnumerateDescendants<T>
    fullName: Altseed2.Node.EnumerateDescendants<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateDescendants``1
    name: EnumerateDescendants(Of T)
    nameWithType: Node.EnumerateDescendants(Of T)
    fullName: Altseed2.Node.EnumerateDescendants(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateDescendants``1(System.Func{{T},System.Boolean})
  commentId: M:Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
  parent: Altseed2.Node
  definition: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
  name: EnumerateDescendants<T>(Func<T, Boolean>)
  nameWithType: Node.EnumerateDescendants<T>(Func<T, Boolean>)
  fullName: Altseed2.Node.EnumerateDescendants<T>(System.Func<T, System.Boolean>)
  nameWithType.vb: Node.EnumerateDescendants(Of T)(Func(Of T, Boolean))
  fullName.vb: Altseed2.Node.EnumerateDescendants(Of T)(System.Func(Of T, System.Boolean))
  name.vb: EnumerateDescendants(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
    name: EnumerateDescendants<T>
    nameWithType: Node.EnumerateDescendants<T>
    fullName: Altseed2.Node.EnumerateDescendants<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
    name: EnumerateDescendants(Of T)
    nameWithType: Node.EnumerateDescendants(Of T)
    fullName: Altseed2.Node.EnumerateDescendants(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Altseed2.Registerable`1
  commentId: T:Altseed2.Registerable`1
  name: Registerable<T>
  nameWithType: Registerable<T>
  fullName: Altseed2.Registerable<T>
  nameWithType.vb: Registerable(Of T)
  fullName.vb: Altseed2.Registerable(Of T)
  name.vb: Registerable(Of T)
  spec.csharp:
  - uid: Altseed2.Registerable`1
    name: Registerable
    nameWithType: Registerable
    fullName: Altseed2.Registerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Altseed2.Registerable`1
    name: Registerable
    nameWithType: Registerable
    fullName: Altseed2.Registerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
  commentId: M:Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
  isExternal: true
  name: EnumerateDescendants<T>(Func<T, Boolean>)
  nameWithType: Node.EnumerateDescendants<T>(Func<T, Boolean>)
  fullName: Altseed2.Node.EnumerateDescendants<T>(System.Func<T, System.Boolean>)
  nameWithType.vb: Node.EnumerateDescendants(Of T)(Func(Of T, Boolean))
  fullName.vb: Altseed2.Node.EnumerateDescendants(Of T)(System.Func(Of T, System.Boolean))
  name.vb: EnumerateDescendants(Of T)(Func(Of T, Boolean))
  spec.csharp:
  - uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
    name: EnumerateDescendants<T>
    nameWithType: Node.EnumerateDescendants<T>
    fullName: Altseed2.Node.EnumerateDescendants<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})
    name: EnumerateDescendants(Of T)
    nameWithType: Node.EnumerateDescendants(Of T)
    fullName: Altseed2.Node.EnumerateDescendants(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.TransformNode
  commentId: T:Altseed2.TransformNode
  parent: Altseed2
  name: TransformNode
  nameWithType: TransformNode
  fullName: Altseed2.TransformNode
- uid: Altseed2.TransformNode.#ctor*
  commentId: Overload:Altseed2.TransformNode.#ctor
  name: TransformNode
  nameWithType: TransformNode.TransformNode
  fullName: Altseed2.TransformNode.TransformNode
- uid: Altseed2.TransformNode.InheritedTransform*
  commentId: Overload:Altseed2.TransformNode.InheritedTransform
  name: InheritedTransform
  nameWithType: TransformNode.InheritedTransform
  fullName: Altseed2.TransformNode.InheritedTransform
- uid: Altseed2.Matrix44F
  commentId: T:Altseed2.Matrix44F
  parent: Altseed2
  name: Matrix44F
  nameWithType: Matrix44F
  fullName: Altseed2.Matrix44F
- uid: Altseed2.TransformNode.CenterPosition
  commentId: P:Altseed2.TransformNode.CenterPosition
  parent: Altseed2.TransformNode
  name: CenterPosition
  nameWithType: TransformNode.CenterPosition
  fullName: Altseed2.TransformNode.CenterPosition
- uid: Altseed2.TransformNode.AbsoluteTransform*
  commentId: Overload:Altseed2.TransformNode.AbsoluteTransform
  name: AbsoluteTransform
  nameWithType: TransformNode.AbsoluteTransform
  fullName: Altseed2.TransformNode.AbsoluteTransform
- uid: Altseed2.TransformNode.Angle*
  commentId: Overload:Altseed2.TransformNode.Angle
  name: Angle
  nameWithType: TransformNode.Angle
  fullName: Altseed2.TransformNode.Angle
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Altseed2.TransformNode.Position*
  commentId: Overload:Altseed2.TransformNode.Position
  name: Position
  nameWithType: TransformNode.Position
  fullName: Altseed2.TransformNode.Position
- uid: Altseed2.Vector2F
  commentId: T:Altseed2.Vector2F
  parent: Altseed2
  name: Vector2F
  nameWithType: Vector2F
  fullName: Altseed2.Vector2F
- uid: Altseed2.TransformNode.CenterPosition*
  commentId: Overload:Altseed2.TransformNode.CenterPosition
  name: CenterPosition
  nameWithType: TransformNode.CenterPosition
  fullName: Altseed2.TransformNode.CenterPosition
- uid: Altseed2.TransformNode.Scale*
  commentId: Overload:Altseed2.TransformNode.Scale
  name: Scale
  nameWithType: TransformNode.Scale
  fullName: Altseed2.TransformNode.Scale
- uid: Altseed2.TransformNode.ContentSize*
  commentId: Overload:Altseed2.TransformNode.ContentSize
  name: ContentSize
  nameWithType: TransformNode.ContentSize
  fullName: Altseed2.TransformNode.ContentSize
- uid: Altseed2.TransformNode.HorizontalFlip*
  commentId: Overload:Altseed2.TransformNode.HorizontalFlip
  name: HorizontalFlip
  nameWithType: TransformNode.HorizontalFlip
  fullName: Altseed2.TransformNode.HorizontalFlip
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Altseed2.TransformNode.VerticalFlip*
  commentId: Overload:Altseed2.TransformNode.VerticalFlip
  name: VerticalFlip
  nameWithType: TransformNode.VerticalFlip
  fullName: Altseed2.TransformNode.VerticalFlip
- uid: Altseed2.TransformNode.Transform
  commentId: P:Altseed2.TransformNode.Transform
  isExternal: true
- uid: Altseed2.TransformNode.CalcTransform*
  commentId: Overload:Altseed2.TransformNode.CalcTransform
  name: CalcTransform
  nameWithType: TransformNode.CalcTransform
  fullName: Altseed2.TransformNode.CalcTransform
- uid: Altseed2.TransformNode.PropagateTransform*
  commentId: Overload:Altseed2.TransformNode.PropagateTransform
  name: PropagateTransform
  nameWithType: TransformNode.PropagateTransform
  fullName: Altseed2.TransformNode.PropagateTransform
