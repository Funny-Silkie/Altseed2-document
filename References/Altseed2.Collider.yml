### YamlMime:ManagedReference
items:
- uid: Altseed2.Collider
  commentId: T:Altseed2.Collider
  id: Collider
  parent: Altseed2
  children:
  - Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
  - Altseed2.Collider.Position
  - Altseed2.Collider.Rotation
  - Altseed2.Collider.Transform
  langs:
  - csharp
  - vb
  name: Collider
  nameWithType: Collider
  fullName: Altseed2.Collider
  type: Class
  source:
    remote:
      path: Engine/CorePartial/Collider.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Collider
    path: Src/Engine/CorePartial/Collider.cs
    startLine: 6
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nコライダの抽象基本クラスです\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class Collider : ISerializable, ICacheKeeper<Collider>
    content.vb: >-
      <Serializable>

      Public Class Collider
          Implements ISerializable, ICacheKeeper(Of Collider)
  inheritance:
  - System.Object
  derivedClasses:
  - Altseed2.CircleCollider
  - Altseed2.PolygonCollider
  - Altseed2.RectangleCollider
  implements:
  - System.Runtime.Serialization.ISerializable
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
  commentId: M:Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
  id: GetIsCollidedWith(Altseed2.Collider)
  parent: Altseed2.Collider
  langs:
  - csharp
  - vb
  name: GetIsCollidedWith(Collider)
  nameWithType: Collider.GetIsCollidedWith(Collider)
  fullName: Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)
  type: Method
  source:
    remote:
      path: Engine/AutoGeneratedCoreBindings.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: GetIsCollidedWith
    path: Src/Engine/AutoGeneratedCoreBindings.cs
    startLine: 13933
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n指定したコライダとの衝突判定を行います。\n"
  example: []
  syntax:
    content: public bool GetIsCollidedWith(Collider collider)
    parameters:
    - id: collider
      type: Altseed2.Collider
    return:
      type: System.Boolean
    content.vb: Public Function GetIsCollidedWith(collider As Collider) As Boolean
  overload: Altseed2.Collider.GetIsCollidedWith*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Collider.Position
  commentId: P:Altseed2.Collider.Position
  id: Position
  parent: Altseed2.Collider
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Collider.Position
  fullName: Altseed2.Collider.Position
  type: Property
  source:
    remote:
      path: Engine/CorePartial/Collider.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Position
    path: Src/Engine/CorePartial/Collider.cs
    startLine: 11
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n座標を取得または設定します。\n"
  example: []
  syntax:
    content: public Vector2F Position { get; set; }
    parameters: []
    return:
      type: Altseed2.Vector2F
    content.vb: Public Property Position As Vector2F
  overload: Altseed2.Collider.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.Collider.Rotation
  commentId: P:Altseed2.Collider.Rotation
  id: Rotation
  parent: Altseed2.Collider
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Collider.Rotation
  fullName: Altseed2.Collider.Rotation
  type: Property
  source:
    remote:
      path: Engine/CorePartial/Collider.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Rotation
    path: Src/Engine/CorePartial/Collider.cs
    startLine: 27
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n回転(弧度法)を取得または設定します。\n"
  example: []
  syntax:
    content: public float Rotation { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Rotation As Single
  overload: Altseed2.Collider.Rotation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altseed2.Collider.Transform
  commentId: P:Altseed2.Collider.Transform
  id: Transform
  parent: Altseed2.Collider
  langs:
  - csharp
  - vb
  name: Transform
  nameWithType: Collider.Transform
  fullName: Altseed2.Collider.Transform
  type: Property
  source:
    remote:
      path: Engine/CorePartial/Collider.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Transform
    path: Src/Engine/CorePartial/Collider.cs
    startLine: 43
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n変形行列を取得または設定します。\n"
  example: []
  syntax:
    content: public Matrix44F Transform { get; set; }
    parameters: []
    return:
      type: Altseed2.Matrix44F
    content.vb: Public Property Transform As Matrix44F
  overload: Altseed2.Collider.Transform*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Altseed2.Collider.GetIsCollidedWith*
  commentId: Overload:Altseed2.Collider.GetIsCollidedWith
  name: GetIsCollidedWith
  nameWithType: Collider.GetIsCollidedWith
  fullName: Altseed2.Collider.GetIsCollidedWith
- uid: Altseed2.Collider
  commentId: T:Altseed2.Collider
  parent: Altseed2
  name: Collider
  nameWithType: Collider
  fullName: Altseed2.Collider
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Altseed2.Collider.Position*
  commentId: Overload:Altseed2.Collider.Position
  name: Position
  nameWithType: Collider.Position
  fullName: Altseed2.Collider.Position
- uid: Altseed2.Vector2F
  commentId: T:Altseed2.Vector2F
  parent: Altseed2
  name: Vector2F
  nameWithType: Vector2F
  fullName: Altseed2.Vector2F
- uid: Altseed2.Collider.Rotation*
  commentId: Overload:Altseed2.Collider.Rotation
  name: Rotation
  nameWithType: Collider.Rotation
  fullName: Altseed2.Collider.Rotation
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Altseed2.Collider.Transform*
  commentId: Overload:Altseed2.Collider.Transform
  name: Transform
  nameWithType: Collider.Transform
  fullName: Altseed2.Collider.Transform
- uid: Altseed2.Matrix44F
  commentId: T:Altseed2.Matrix44F
  parent: Altseed2
  name: Matrix44F
  nameWithType: Matrix44F
  fullName: Altseed2.Matrix44F
