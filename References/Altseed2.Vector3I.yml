### YamlMime:ManagedReference
items:
- uid: Altseed2.Vector3I
  commentId: T:Altseed2.Vector3I
  id: Vector3I
  parent: Altseed2
  children:
  - Altseed2.Vector3I.#ctor(System.Int32,System.Int32,System.Int32)
  - Altseed2.Vector3I.Cross(Altseed2.Vector3I,Altseed2.Vector3I)
  - Altseed2.Vector3I.Distance(Altseed2.Vector3I,Altseed2.Vector3I)
  - Altseed2.Vector3I.Dot(Altseed2.Vector3I,Altseed2.Vector3I)
  - Altseed2.Vector3I.To3F
  - Altseed2.Vector3I.ToString
  - Altseed2.Vector3I.X
  - Altseed2.Vector3I.Y
  - Altseed2.Vector3I.Z
  langs:
  - csharp
  - vb
  name: Vector3I
  nameWithType: Vector3I
  fullName: Altseed2.Vector3I
  type: Struct
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Vector3I
    path: Src/Engine/Math/Vector3I.cs
    startLine: 8
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n3次元ベクトル\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector3I : IEquatable<Vector3I>
    content.vb: >-
      <Serializable>

      Public Structure Vector3I
          Implements IEquatable(Of Vector3I)
  implements:
  - System.IEquatable{Altseed2.Vector3I}
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Altseed2.Vector3I.X
  commentId: F:Altseed2.Vector3I.X
  id: X
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector3I.X
  fullName: Altseed2.Vector3I.X
  type: Field
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: X
    path: Src/Engine/Math/Vector3I.cs
    startLine: 16
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nX成分\n"
  example: []
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Vector3I.Y
  commentId: F:Altseed2.Vector3I.Y
  id: Y
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector3I.Y
  fullName: Altseed2.Vector3I.Y
  type: Field
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Y
    path: Src/Engine/Math/Vector3I.cs
    startLine: 22
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nY成分\n"
  example: []
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Vector3I.Z
  commentId: F:Altseed2.Vector3I.Z
  id: Z
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector3I.Z
  fullName: Altseed2.Vector3I.Z
  type: Field
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Z
    path: Src/Engine/Math/Vector3I.cs
    startLine: 28
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nZ成分\n"
  example: []
  syntax:
    content: public int Z
    return:
      type: System.Int32
    content.vb: Public Z As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Vector3I.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:Altseed2.Vector3I.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: Vector3I(Int32, Int32, Int32)
  nameWithType: Vector3I.Vector3I(Int32, Int32, Int32)
  fullName: Altseed2.Vector3I.Vector3I(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: .ctor
    path: Src/Engine/Math/Vector3I.cs
    startLine: 36
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.Vector3I\" data-throw-if-not-resolved=\"false\"></xref>の新しいインスタンスを生成します。\n"
  example: []
  syntax:
    content: public Vector3I(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: X成分
    - id: y
      type: System.Int32
      description: Y成分
    - id: z
      type: System.Int32
      description: Z成分
    content.vb: Public Sub New(x As Integer, y As Integer, z As Integer)
  overload: Altseed2.Vector3I.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Vector3I.ToString
  commentId: M:Altseed2.Vector3I.ToString
  id: ToString
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3I.ToString()
  fullName: Altseed2.Vector3I.ToString()
  type: Method
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: ToString
    path: Src/Engine/Math/Vector3I.cs
    startLine: 107
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\nこのベクトルを表す文字列取得します。\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: このベクトルを表す文字列取得します。
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Altseed2.Vector3I.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Altseed2.Vector3I.To3F
  commentId: M:Altseed2.Vector3I.To3F
  id: To3F
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: To3F()
  nameWithType: Vector3I.To3F()
  fullName: Altseed2.Vector3I.To3F()
  type: Method
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: To3F
    path: Src/Engine/Math/Vector3I.cs
    startLine: 113
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n<xref href=\"Altseed2.Vector3F\" data-throw-if-not-resolved=\"false\"></xref>に型変換します。\n"
  example: []
  syntax:
    content: public Vector3F To3F()
    return:
      type: Altseed2.Vector3F
      description: このインスタンスと等価な<xref href="Altseed2.Vector3F" data-throw-if-not-resolved="false"></xref>の新しいインスタンス
    content.vb: Public Function To3F As Vector3F
  overload: Altseed2.Vector3I.To3F*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altseed2.Vector3I.Cross(Altseed2.Vector3I,Altseed2.Vector3I)
  commentId: M:Altseed2.Vector3I.Cross(Altseed2.Vector3I,Altseed2.Vector3I)
  id: Cross(Altseed2.Vector3I,Altseed2.Vector3I)
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: Cross(Vector3I, Vector3I)
  nameWithType: Vector3I.Cross(Vector3I, Vector3I)
  fullName: Altseed2.Vector3I.Cross(Altseed2.Vector3I, Altseed2.Vector3I)
  type: Method
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Cross
    path: Src/Engine/Math/Vector3I.cs
    startLine: 124
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n外積取得します。\n"
  remarks: "\n右手の親指がv1、人差し指がv2としたとき、中指の方向を返します。。\n"
  example: []
  syntax:
    content: public static Vector3I Cross(Vector3I v1, Vector3I v2)
    parameters:
    - id: v1
      type: Altseed2.Vector3I
      description: v1ベクトル
    - id: v2
      type: Altseed2.Vector3I
      description: v2ベクトル
    return:
      type: Altseed2.Vector3I
      description: 外積v1×v2
    content.vb: Public Shared Function Cross(v1 As Vector3I, v2 As Vector3I) As Vector3I
  overload: Altseed2.Vector3I.Cross*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Vector3I.Distance(Altseed2.Vector3I,Altseed2.Vector3I)
  commentId: M:Altseed2.Vector3I.Distance(Altseed2.Vector3I,Altseed2.Vector3I)
  id: Distance(Altseed2.Vector3I,Altseed2.Vector3I)
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: Distance(Vector3I, Vector3I)
  nameWithType: Vector3I.Distance(Vector3I, Vector3I)
  fullName: Altseed2.Vector3I.Distance(Altseed2.Vector3I, Altseed2.Vector3I)
  type: Method
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Distance
    path: Src/Engine/Math/Vector3I.cs
    startLine: 142
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n2点間の距離取得します。\n"
  example: []
  syntax:
    content: public static float Distance(Vector3I v1, Vector3I v2)
    parameters:
    - id: v1
      type: Altseed2.Vector3I
      description: v1ベクトル
    - id: v2
      type: Altseed2.Vector3I
      description: v2ベクトル
    return:
      type: System.Single
      description: v1とv2の距離
    content.vb: Public Shared Function Distance(v1 As Vector3I, v2 As Vector3I) As Single
  overload: Altseed2.Vector3I.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altseed2.Vector3I.Dot(Altseed2.Vector3I,Altseed2.Vector3I)
  commentId: M:Altseed2.Vector3I.Dot(Altseed2.Vector3I,Altseed2.Vector3I)
  id: Dot(Altseed2.Vector3I,Altseed2.Vector3I)
  parent: Altseed2.Vector3I
  langs:
  - csharp
  - vb
  name: Dot(Vector3I, Vector3I)
  nameWithType: Vector3I.Dot(Vector3I, Vector3I)
  fullName: Altseed2.Vector3I.Dot(Altseed2.Vector3I, Altseed2.Vector3I)
  type: Method
  source:
    remote:
      path: Engine/Math/Vector3I.cs
      branch: bca2a8ec4d1342197d3f85b9007ee6da648523a2
      repo: https://github.com/altseed/altseed2-csharp.git
    id: Dot
    path: Src/Engine/Math/Vector3I.cs
    startLine: 156
  assemblies:
  - Altseed2
  namespace: Altseed2
  summary: "\n内積取得します。\n"
  example: []
  syntax:
    content: public static int Dot(Vector3I v1, Vector3I v2)
    parameters:
    - id: v1
      type: Altseed2.Vector3I
      description: v1ベクトル
    - id: v2
      type: Altseed2.Vector3I
      description: v2ベクトル
    return:
      type: System.Int32
      description: 内積v1・v2
    content.vb: Public Shared Function Dot(v1 As Vector3I, v2 As Vector3I) As Integer
  overload: Altseed2.Vector3I.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Altseed2
  commentId: N:Altseed2
  name: Altseed2
  nameWithType: Altseed2
  fullName: Altseed2
- uid: System.IEquatable{Altseed2.Vector3I}
  commentId: T:System.IEquatable{Altseed2.Vector3I}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Vector3I>
  nameWithType: IEquatable<Vector3I>
  fullName: System.IEquatable<Altseed2.Vector3I>
  nameWithType.vb: IEquatable(Of Vector3I)
  fullName.vb: System.IEquatable(Of Altseed2.Vector3I)
  name.vb: IEquatable(Of Vector3I)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altseed2.Vector3I
    name: Vector3I
    nameWithType: Vector3I
    fullName: Altseed2.Vector3I
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altseed2.Vector3I
    name: Vector3I
    nameWithType: Vector3I
    fullName: Altseed2.Vector3I
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Altseed2.Vector3I
  commentId: T:Altseed2.Vector3I
  parent: Altseed2
  name: Vector3I
  nameWithType: Vector3I
  fullName: Altseed2.Vector3I
- uid: Altseed2.Vector3I.#ctor*
  commentId: Overload:Altseed2.Vector3I.#ctor
  name: Vector3I
  nameWithType: Vector3I.Vector3I
  fullName: Altseed2.Vector3I.Vector3I
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Altseed2.Vector3I.ToString*
  commentId: Overload:Altseed2.Vector3I.ToString
  name: ToString
  nameWithType: Vector3I.ToString
  fullName: Altseed2.Vector3I.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Altseed2.Vector3F
  commentId: T:Altseed2.Vector3F
  parent: Altseed2
  name: Vector3F
  nameWithType: Vector3F
  fullName: Altseed2.Vector3F
- uid: Altseed2.Vector3I.To3F*
  commentId: Overload:Altseed2.Vector3I.To3F
  name: To3F
  nameWithType: Vector3I.To3F
  fullName: Altseed2.Vector3I.To3F
- uid: Altseed2.Vector3I.Cross*
  commentId: Overload:Altseed2.Vector3I.Cross
  name: Cross
  nameWithType: Vector3I.Cross
  fullName: Altseed2.Vector3I.Cross
- uid: Altseed2.Vector3I.Distance*
  commentId: Overload:Altseed2.Vector3I.Distance
  name: Distance
  nameWithType: Vector3I.Distance
  fullName: Altseed2.Vector3I.Distance
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Altseed2.Vector3I.Dot*
  commentId: Overload:Altseed2.Vector3I.Dot
  name: Dot
  nameWithType: Vector3I.Dot
  fullName: Altseed2.Vector3I.Dot
